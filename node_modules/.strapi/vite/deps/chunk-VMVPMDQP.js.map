{
  "version": 3,
  "sources": ["../../../@strapi/admin/admin/src/pages/Settings/pages/Users/utils/validation.ts"],
  "sourcesContent": ["import * as yup from 'yup';\n\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\n\n/**\n * @description This needs wrapping in `yup.object().shape()` before use.\n */\nconst COMMON_USER_SCHEMA = {\n  firstname: yup.string().trim().required({\n    id: translatedErrors.required.id,\n    defaultMessage: 'This field is required',\n  }),\n  lastname: yup.string(),\n  email: yup.string().email(translatedErrors.email).lowercase().required({\n    id: translatedErrors.required.id,\n    defaultMessage: 'This field is required',\n  }),\n  username: yup\n    .string()\n    .transform((value) => (value === '' ? undefined : value))\n    .nullable(),\n  password: yup\n    .string()\n    .transform((value) => (value === '' || value === null ? undefined : value))\n    .nullable()\n    .min(8, {\n      ...translatedErrors.minLength,\n      values: { min: 8 },\n    })\n    .matches(/[a-z]/, {\n      id: 'components.Input.error.contain.lowercase',\n      defaultMessage: 'Password must contain at least one lowercase character',\n    })\n    .matches(/[A-Z]/, {\n      id: 'components.Input.error.contain.uppercase',\n      defaultMessage: 'Password must contain at least one uppercase character',\n    })\n    .matches(/\\d/, {\n      id: 'components.Input.error.contain.number',\n      defaultMessage: 'Password must contain at least one number',\n    }),\n  confirmPassword: yup\n    .string()\n    .transform((value) => (value === '' ? null : value))\n    .nullable()\n    .min(8, {\n      ...translatedErrors.minLength,\n      values: { min: 8 },\n    })\n    .oneOf([yup.ref('password'), null], {\n      id: 'components.Input.error.password.noMatch',\n      defaultMessage: 'Passwords must match',\n    })\n    .when('password', (password, passSchema) => {\n      return password\n        ? passSchema\n            .required({\n              id: translatedErrors.required.id,\n              defaultMessage: 'This field is required',\n            })\n            .nullable()\n        : passSchema;\n    }),\n};\n\nexport { COMMON_USER_SCHEMA };\n"],
  "mappings": ";;;;;;;AAOA,IAAM,qBAAqB;EACzB,WAAeA,QAAA,EAAS,KAAA,EAAO,SAAS;IACtC,IAAIC,YAAiB,SAAS;IAC9B,gBAAgB;EAAA,CACjB;EACD,UAAcD,QAAO;EACrB,OAAWA,QAAA,EAAS,MAAMC,YAAiB,KAAK,EAAE,UAAU,EAAE,SAAS;IACrE,IAAIA,YAAiB,SAAS;IAC9B,gBAAgB;EAAA,CACjB;EACD,UACGD,QAAO,EACP,UAAU,CAAC,UAAW,UAAU,KAAK,SAAY,KAAM,EACvD,SAAS;EACZ,UACGA,QAAA,EACA,UAAU,CAAC,UAAW,UAAU,MAAM,UAAU,OAAO,SAAY,KAAM,EACzE,SAAS,EACT,IAAI,GAAG;IACN,GAAGC,YAAiB;IACpB,QAAQ,EAAE,KAAK,EAAE;EAAA,CAClB,EACA,QAAQ,SAAS;IAChB,IAAI;IACJ,gBAAgB;EAAA,CACjB,EACA,QAAQ,SAAS;IAChB,IAAI;IACJ,gBAAgB;EAAA,CACjB,EACA,QAAQ,MAAM;IACb,IAAI;IACJ,gBAAgB;EAAA,CACjB;EACH,iBACGD,QAAO,EACP,UAAU,CAAC,UAAW,UAAU,KAAK,OAAO,KAAM,EAClD,SAAS,EACT,IAAI,GAAG;IACN,GAAGC,YAAiB;IACpB,QAAQ,EAAE,KAAK,EAAE;EAAA,CAClB,EACA,MAAM,CAAK,OAAI,UAAU,GAAG,IAAI,GAAG;IAClC,IAAI;IACJ,gBAAgB;EAAA,CACjB,EACA,KAAK,YAAY,CAAC,UAAU,eAAe;AACnC,WAAA,WACH,WACG,SAAS;MACR,IAAIA,YAAiB,SAAS;MAC9B,gBAAgB;IAAA,CACjB,EACA,SAAA,IACH;EAAA,CACL;AACL;",
  "names": ["create", "translatedErrors"]
}
