{
  "version": 3,
  "sources": ["../../../@strapi/admin/ee/admin/src/pages/AuthPage/components/SSOProviders.tsx"],
  "sourcesContent": ["import { Flex, Grid, Tooltip, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { GetProviders } from '../../../../../../shared/contracts/providers';\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviders\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProvidersProps {\n  providers: GetProviders.Response;\n  displayAllProviders?: boolean;\n}\n\nconst SSOProviders = ({ providers, displayAllProviders }: SSOProvidersProps) => {\n  const { formatMessage } = useIntl();\n\n  if (displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n      </Grid.Root>\n    );\n  }\n\n  if (providers.length > 2 && !displayAllProviders) {\n    return (\n      <Grid.Root gap={4}>\n        {providers.slice(0, 2).map((provider) => (\n          <Grid.Item key={provider.uid} col={4} direction=\"column\" alignItems=\"stretch\">\n            <SSOProviderButton provider={provider} />\n          </Grid.Item>\n        ))}\n        <Grid.Item col={4} direction=\"column\" alignItems=\"stretch\">\n          <Tooltip\n            label={formatMessage({\n              id: 'global.see-more',\n            })}\n          >\n            <SSOButton as={Link} to=\"/auth/providers\">\n              <span aria-hidden>•••</span>\n            </SSOButton>\n          </Tooltip>\n        </Grid.Item>\n      </Grid.Root>\n    );\n  }\n\n  return (\n    <SSOProvidersWrapper justifyContent=\"center\">\n      {providers.map((provider) => (\n        <SSOProviderButton key={provider.uid} provider={provider} />\n      ))}\n    </SSOProvidersWrapper>\n  );\n};\n\nconst SSOProvidersWrapper = styled(Flex)`\n  & a:not(:first-child):not(:last-child) {\n    margin: 0 ${({ theme }) => theme.spaces[2]};\n  }\n  & a:first-child {\n    margin-right: ${({ theme }) => theme.spaces[2]};\n  }\n  & a:last-child {\n    margin-left: ${({ theme }) => theme.spaces[2]};\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * SSOProviderButton\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SSOProviderButtonProps {\n  provider: GetProviders.Response[number];\n}\n\nconst SSOProviderButton = ({ provider }: SSOProviderButtonProps) => {\n  return (\n    <Tooltip label={provider.displayName}>\n      <SSOButton href={`${window.strapi.backendURL}/admin/connect/${provider.uid}`}>\n        {provider.icon ? (\n          <img src={provider.icon} aria-hidden alt=\"\" height=\"32px\" />\n        ) : (\n          <Typography>{provider.displayName}</Typography>\n        )}\n      </SSOButton>\n    </Tooltip>\n  );\n};\n\nconst SSOButton = styled.a`\n  width: 13.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 4.8rem;\n  border: 1px solid ${({ theme }) => theme.colors.neutral150};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  text-decoration: inherit;\n  &:link {\n    text-decoration: none;\n  }\n  color: ${({ theme }) => theme.colors.neutral600};\n`;\n\nexport { SSOProviders };\nexport type { SSOProvidersProps };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,eAAe,CAAC,EAAE,WAAW,oBAAA,MAA6C;AACxE,QAAA,EAAE,cAAc,IAAI,QAAQ;AAElC,MAAI,qBAAqB;AAErB,eAAA,wBAAC,KAAK,MAAL,EAAU,KAAK,GACb,UAAA,UAAU,IAAI,CAAC,iBACd,wBAAC,KAAK,MAAL,EAA6B,KAAK,GAAG,WAAU,UAAS,YAAW,WAClE,cAAA,wBAAC,mBAAkB,EAAA,SAAA,CAAoB,EADzB,GAAA,SAAS,GAEzB,CACD,EACH,CAAA;EAAA;AAIJ,MAAI,UAAU,SAAS,KAAK,CAAC,qBAAqB;AAChD,eACG,yBAAA,KAAK,MAAL,EAAU,KAAK,GACb,UAAA;MAAU,UAAA,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,iBACzB,wBAAA,KAAK,MAAL,EAA6B,KAAK,GAAG,WAAU,UAAS,YAAW,WAClE,cAAA,wBAAC,mBAAA,EAAkB,SAAoB,CAAA,EAAA,GADzB,SAAS,GAEzB,CACD;UACD,wBAAC,KAAK,MAAL,EAAU,KAAK,GAAG,WAAU,UAAS,YAAW,WAC/C,cAAA;QAAC;QAAA;UACC,OAAO,cAAc;YACnB,IAAI;UAAA,CACL;UAED,cAAA,wBAAC,WAAU,EAAA,IAAI,MAAM,IAAG,mBACtB,cAAA,wBAAC,QAAK,EAAA,eAAW,MAAC,UAAA,MAAA,CAAG,EACvB,CAAA;QAAA;MAAA,EAEJ,CAAA;IAAA,EACF,CAAA;EAAA;AAIJ,aACG,wBAAA,qBAAA,EAAoB,gBAAe,UACjC,UAAA,UAAU,IAAI,CAAC,iBACd,wBAAC,mBAAqC,EAAA,SAAA,GAAd,SAAS,GAAyB,CAC3D,EACH,CAAA;AAEJ;AAEA,IAAM,sBAAsB,GAAO,IAAI;;gBAEvB,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,CAAC,CAAC;;;oBAG1B,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,CAAC,CAAC;;;mBAG/B,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,CAAC,CAAC;;;AAYjD,IAAM,oBAAoB,CAAC,EAAE,SAAA,MAAuC;AAClE,aACG,wBAAA,aAAA,EAAQ,OAAO,SAAS,aACvB,cAAC,wBAAA,WAAA,EAAU,MAAM,GAAG,OAAO,OAAO,UAAU,kBAAkB,SAAS,GAAG,IACvE,UAAA,SAAS,WACR,wBAAC,OAAA,EAAI,KAAK,SAAS,MAAM,eAAW,MAAC,KAAI,IAAG,QAAO,OAAA,CAAO,QAEzD,wBAAA,YAAA,EAAY,UAAS,SAAA,YAAA,CAAY,EAAA,CAEtC,EACF,CAAA;AAEJ;AAEA,IAAM,YAAY,GAAO;;;;;;sBAMH,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,UAAU;mBACzC,CAAC,EAAE,MAAM,MAAM,MAAM,YAAY;;;;;WAKzC,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,UAAU;;",
  "names": []
}
