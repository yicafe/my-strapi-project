{
  "version": 3,
  "sources": ["../../../@strapi/content-manager/admin/src/services/components.ts", "../../../@strapi/content-manager/admin/src/pages/ComponentConfigurationPage.tsx"],
  "sourcesContent": ["import { contentManagerApi } from './api';\n\nimport type {\n  FindComponentConfiguration,\n  UpdateComponentConfiguration,\n} from '../../../shared/contracts/components';\n\nconst componentsApi = contentManagerApi.injectEndpoints({\n  endpoints: (builder) => ({\n    getComponentConfiguration: builder.query<\n      FindComponentConfiguration.Response['data'],\n      FindComponentConfiguration.Params['uid']\n    >({\n      query: (uid) => `/content-manager/components/${uid}/configuration`,\n      transformResponse: (response: FindComponentConfiguration.Response) => response.data,\n      providesTags: (_result, _error, uid) => [{ type: 'ComponentConfiguration', id: uid }],\n    }),\n    updateComponentConfiguration: builder.mutation({\n      query: ({ uid, ...body }) => ({\n        url: `/content-manager/components/${uid}/configuration`,\n        method: 'PUT',\n        data: body,\n      }),\n      transformResponse: (response: UpdateComponentConfiguration.Response) => response.data,\n      invalidatesTags: (_result, _error, { uid }) => [\n        { type: 'ComponentConfiguration', id: uid },\n        // otherwise layouts already fetched will have stale component configuration data.\n        { type: 'ContentTypeSettings', id: 'LIST' },\n      ],\n    }),\n  }),\n});\n\nconst { useGetComponentConfigurationQuery, useUpdateComponentConfigurationMutation } =\n  componentsApi;\n\nexport { useGetComponentConfigurationQuery, useUpdateComponentConfigurationMutation };\n", "import * as React from 'react';\n\nimport { Page, useNotification, useAPIErrorHandler } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\n\nimport { TEMP_FIELD_NAME } from '../components/ConfigurationForm/Fields';\nimport { ConfigurationForm, ConfigurationFormProps } from '../components/ConfigurationForm/Form';\nimport { ComponentsDictionary, extractContentTypeComponents } from '../hooks/useContentTypeSchema';\nimport {\n  DEFAULT_SETTINGS,\n  EditLayout,\n  convertEditLayoutToFieldLayouts,\n} from '../hooks/useDocumentLayout';\nimport { useTypedSelector } from '../modules/hooks';\nimport {\n  useGetComponentConfigurationQuery,\n  useUpdateComponentConfigurationMutation,\n} from '../services/components';\nimport { useGetInitialDataQuery } from '../services/init';\nimport { setIn } from '../utils/objects';\n\nimport type { Component, FindComponentConfiguration } from '../../../shared/contracts/components';\nimport type { Metadatas } from '../../../shared/contracts/content-types';\n\n/* -------------------------------------------------------------------------------------------------\n * ComponentConfigurationPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst ComponentConfigurationPage = () => {\n  /**\n   * useDocumentLayout only works for documents, not components,\n   * it feels weird to make that hook work for both when this is SUCH\n   * a unique use case and we only do it here, so in short, we essentially\n   * just extracted the logic to make an edit view layout and reproduced it here.\n   */\n  const { slug: model } = useParams<{ slug: string }>();\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\n\n  const {\n    components,\n    fieldSizes,\n    schema,\n    error: errorSchema,\n    isLoading: isLoadingSchema,\n    isFetching: isFetchingSchema,\n  } = useGetInitialDataQuery(undefined, {\n    selectFromResult: (res) => {\n      const schema = res.data?.components.find((ct) => ct.uid === model);\n\n      const componentsByKey = res.data?.components.reduce<ComponentsDictionary>(\n        (acc, component) => {\n          acc[component.uid] = component;\n\n          return acc;\n        },\n        {}\n      );\n\n      const components = extractContentTypeComponents(schema?.attributes, componentsByKey);\n\n      const fieldSizes = Object.entries(res.data?.fieldSizes ?? {}).reduce<\n        ConfigurationFormProps['fieldSizes']\n      >((acc, [attributeName, { default: size }]) => {\n        acc[attributeName] = size;\n\n        return acc;\n      }, {});\n\n      return {\n        isFetching: res.isFetching,\n        isLoading: res.isLoading,\n        error: res.error,\n        components,\n        schema,\n        fieldSizes,\n      };\n    },\n  });\n\n  React.useEffect(() => {\n    if (errorSchema) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(errorSchema),\n      });\n    }\n  }, [errorSchema, formatAPIError, toggleNotification]);\n\n  const {\n    data,\n    isLoading: isLoadingConfig,\n    isFetching: isFetchingConfig,\n    error,\n  } = useGetComponentConfigurationQuery(model ?? '');\n\n  React.useEffect(() => {\n    if (error) {\n      toggleNotification({\n        type: 'danger',\n        message: formatAPIError(error),\n      });\n    }\n  }, [error, formatAPIError, toggleNotification]);\n\n  /**\n   * you **must** check if we're loading or fetching in case the component gets new props\n   * but nothing was unmounted, it then becomes a fetch, not a load.\n   */\n  const isLoading = isLoadingConfig || isLoadingSchema || isFetchingConfig || isFetchingSchema;\n\n  const editLayout = React.useMemo(\n    () =>\n      data && !isLoading\n        ? formatEditLayout(data, { schema, components })\n        : ({\n            layout: [],\n            components: {},\n            metadatas: {},\n            options: {},\n            settings: DEFAULT_SETTINGS,\n          } as EditLayout),\n    [data, isLoading, schema, components]\n  );\n\n  const [updateConfiguration] = useUpdateComponentConfigurationMutation();\n  const handleSubmit: ConfigurationFormProps['onSubmit'] = async (formData) => {\n    try {\n      /**\n       * We reconstruct the metadatas object by taking the existing list metadatas\n       * and re-merging that by attribute name with the current list metadatas, whilst overwriting\n       * the data from the form we've built.\n       */\n      const meta = Object.entries(data?.component.metadatas ?? {}).reduce<Metadatas>(\n        (acc, [name, { edit, list }]) => {\n          const {\n            __temp_key__,\n            size: _size,\n            name: _name,\n            ...editedMetadata\n          } = formData.layout.flatMap((row) => row.children).find((field) => field.name === name) ??\n          {};\n\n          acc[name] = {\n            edit: {\n              ...edit,\n              ...editedMetadata,\n            },\n            list,\n          };\n\n          return acc;\n        },\n        {}\n      );\n\n      const res = await updateConfiguration({\n        layouts: {\n          edit: formData.layout.map((row) =>\n            row.children.reduce<Array<{ name: string; size: number }>>((acc, { name, size }) => {\n              if (name !== TEMP_FIELD_NAME) {\n                return [...acc, { name, size }];\n              }\n\n              return acc;\n            }, [])\n          ),\n          list: data?.component.layouts.list,\n        },\n        settings: setIn(formData.settings, 'displayName', undefined),\n        metadatas: meta,\n        uid: model,\n      });\n\n      if ('data' in res) {\n        toggleNotification({\n          type: 'success',\n          message: formatMessage({ id: 'notification.success.saved', defaultMessage: 'Saved' }),\n        });\n      } else {\n        toggleNotification({\n          type: 'danger',\n          message: formatAPIError(res.error),\n        });\n      }\n    } catch {\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n    }\n  };\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (error || errorSchema || !schema) {\n    return <Page.Error />;\n  }\n\n  return (\n    <>\n      <Page.Title>{`Configure ${editLayout.settings.displayName} Edit View`}</Page.Title>\n      <ConfigurationForm\n        onSubmit={handleSubmit}\n        attributes={schema.attributes}\n        fieldSizes={fieldSizes}\n        layout={editLayout}\n      />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\n\nconst formatEditLayout = (\n  data: FindComponentConfiguration.Response['data'],\n  { schema, components }: { schema?: Component; components: ComponentsDictionary }\n) => {\n  const editAttributes = convertEditLayoutToFieldLayouts(\n    data.component.layouts.edit,\n    schema?.attributes,\n    data.component.metadatas,\n    { configurations: data.components, schemas: components }\n  );\n\n  const componentEditAttributes = Object.entries(data.components).reduce<EditLayout['components']>(\n    (acc, [uid, configuration]) => {\n      acc[uid] = {\n        layout: convertEditLayoutToFieldLayouts(\n          configuration.layouts.edit,\n          components[uid].attributes,\n          configuration.metadatas\n        ),\n        settings: {\n          ...configuration.settings,\n          icon: components[uid].info.icon,\n          displayName: components[uid].info.displayName,\n        },\n      };\n      return acc;\n    },\n    {}\n  );\n\n  const editMetadatas = Object.entries(data.component.metadatas).reduce<EditLayout['metadatas']>(\n    (acc, [attribute, metadata]) => {\n      return {\n        ...acc,\n        [attribute]: metadata.edit,\n      };\n    },\n    {}\n  );\n\n  return {\n    layout: [editAttributes],\n    components: componentEditAttributes,\n    metadatas: editMetadatas,\n    options: {\n      ...schema?.options,\n      ...schema?.pluginOptions,\n    },\n    settings: {\n      ...data.component.settings,\n      displayName: schema?.info.displayName,\n    },\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\n\nconst ProtectedComponentConfigurationPage = () => {\n  const permissions = useTypedSelector(\n    (state) => state.admin_app.permissions.contentManager?.componentsConfigurations\n  );\n\n  return (\n    <Page.Protect permissions={permissions}>\n      <ComponentConfigurationPage />\n    </Page.Protect>\n  );\n};\n\nexport { ComponentConfigurationPage, ProtectedComponentConfigurationPage };\n"],
  "mappings": "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",
  "names": ["schema", "components", "fieldSizes"]
}
