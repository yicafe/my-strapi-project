{
  "version": 3,
  "sources": ["../../../lodash.deburr/index.js", "../../../@sindresorhus/transliterate/node_modules/escape-string-regexp/index.js", "../../../@sindresorhus/transliterate/replacements.js", "../../../@sindresorhus/transliterate/index.js", "../../../@sindresorhus/slugify/overridable-replacements.js", "../../../@sindresorhus/slugify/index.js", "../../../@strapi/content-type-builder/admin/src/constants.ts", "../../../@strapi/content-type-builder/admin/src/pluginId.ts", "../../../@strapi/content-type-builder/admin/src/utils/getRelationType.ts", "../../../@strapi/content-type-builder/admin/src/utils/makeUnique.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManagerProvider/constants.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManagerProvider/utils/retrieveComponentsFromSchema.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManagerProvider/reducer.ts", "../../../@strapi/content-type-builder/admin/src/utils/nameToSlug.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/constants.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/createUid.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/customFieldDefaultOptionsReducer.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/relations.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/reducer.ts", "../../../@strapi/content-type-builder/admin/src/reducers.ts", "../../../@strapi/content-type-builder/admin/src/utils/formAPI.ts", "../../../@strapi/content-type-builder/admin/src/utils/prefixPluginTranslations.ts", "../../../@strapi/content-type-builder/admin/src/components/AutoReloadOverlayBlocker.tsx", "../../../@strapi/content-type-builder/admin/src/index.ts"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n", "'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n", "'use strict';\n\nmodule.exports = [\n\t// German umlauts\n\t['ß', 'ss'],\n\t['ä', 'ae'],\n\t['Ä', 'Ae'],\n\t['ö', 'oe'],\n\t['Ö', 'Oe'],\n\t['ü', 'ue'],\n\t['Ü', 'Ue'],\n\n\t// Latin\n\t['À', 'A'],\n\t['Á', 'A'],\n\t['Â', 'A'],\n\t['Ã', 'A'],\n\t['Ä', 'Ae'],\n\t['Å', 'A'],\n\t['Æ', 'AE'],\n\t['Ç', 'C'],\n\t['È', 'E'],\n\t['É', 'E'],\n\t['Ê', 'E'],\n\t['Ë', 'E'],\n\t['Ì', 'I'],\n\t['Í', 'I'],\n\t['Î', 'I'],\n\t['Ï', 'I'],\n\t['Ð', 'D'],\n\t['Ñ', 'N'],\n\t['Ò', 'O'],\n\t['Ó', 'O'],\n\t['Ô', 'O'],\n\t['Õ', 'O'],\n\t['Ö', 'Oe'],\n\t['Ő', 'O'],\n\t['Ø', 'O'],\n\t['Ù', 'U'],\n\t['Ú', 'U'],\n\t['Û', 'U'],\n\t['Ü', 'Ue'],\n\t['Ű', 'U'],\n\t['Ý', 'Y'],\n\t['Þ', 'TH'],\n\t['ß', 'ss'],\n\t['à', 'a'],\n\t['á', 'a'],\n\t['â', 'a'],\n\t['ã', 'a'],\n\t['ä', 'ae'],\n\t['å', 'a'],\n\t['æ', 'ae'],\n\t['ç', 'c'],\n\t['è', 'e'],\n\t['é', 'e'],\n\t['ê', 'e'],\n\t['ë', 'e'],\n\t['ì', 'i'],\n\t['í', 'i'],\n\t['î', 'i'],\n\t['ï', 'i'],\n\t['ð', 'd'],\n\t['ñ', 'n'],\n\t['ò', 'o'],\n\t['ó', 'o'],\n\t['ô', 'o'],\n\t['õ', 'o'],\n\t['ö', 'oe'],\n\t['ő', 'o'],\n\t['ø', 'o'],\n\t['ù', 'u'],\n\t['ú', 'u'],\n\t['û', 'u'],\n\t['ü', 'ue'],\n\t['ű', 'u'],\n\t['ý', 'y'],\n\t['þ', 'th'],\n\t['ÿ', 'y'],\n\t['ẞ', 'SS'],\n\n\t// Vietnamese\n\t['à', 'a'],\n\t['À', 'A'],\n\t['á', 'a'],\n\t['Á', 'A'],\n\t['â', 'a'],\n\t['Â', 'A'],\n\t['ã', 'a'],\n\t['Ã', 'A'],\n\t['è', 'e'],\n\t['È', 'E'],\n\t['é', 'e'],\n\t['É', 'E'],\n\t['ê', 'e'],\n\t['Ê', 'E'],\n\t['ì', 'i'],\n\t['Ì', 'I'],\n\t['í', 'i'],\n\t['Í', 'I'],\n\t['ò', 'o'],\n\t['Ò', 'O'],\n\t['ó', 'o'],\n\t['Ó', 'O'],\n\t['ô', 'o'],\n\t['Ô', 'O'],\n\t['õ', 'o'],\n\t['Õ', 'O'],\n\t['ù', 'u'],\n\t['Ù', 'U'],\n\t['ú', 'u'],\n\t['Ú', 'U'],\n\t['ý', 'y'],\n\t['Ý', 'Y'],\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['Đ', 'D'],\n\t['đ', 'd'],\n\t['ĩ', 'i'],\n\t['Ĩ', 'I'],\n\t['ũ', 'u'],\n\t['Ũ', 'U'],\n\t['ơ', 'o'],\n\t['Ơ', 'O'],\n\t['ư', 'u'],\n\t['Ư', 'U'],\n\t['ạ', 'a'],\n\t['Ạ', 'A'],\n\t['ả', 'a'],\n\t['Ả', 'A'],\n\t['ấ', 'a'],\n\t['Ấ', 'A'],\n\t['ầ', 'a'],\n\t['Ầ', 'A'],\n\t['ẩ', 'a'],\n\t['Ẩ', 'A'],\n\t['ẫ', 'a'],\n\t['Ẫ', 'A'],\n\t['ậ', 'a'],\n\t['Ậ', 'A'],\n\t['ắ', 'a'],\n\t['Ắ', 'A'],\n\t['ằ', 'a'],\n\t['Ằ', 'A'],\n\t['ẳ', 'a'],\n\t['Ẳ', 'A'],\n\t['ẵ', 'a'],\n\t['Ẵ', 'A'],\n\t['ặ', 'a'],\n\t['Ặ', 'A'],\n\t['ẹ', 'e'],\n\t['Ẹ', 'E'],\n\t['ẻ', 'e'],\n\t['Ẻ', 'E'],\n\t['ẽ', 'e'],\n\t['Ẽ', 'E'],\n\t['ế', 'e'],\n\t['Ế', 'E'],\n\t['ề', 'e'],\n\t['Ề', 'E'],\n\t['ể', 'e'],\n\t['Ể', 'E'],\n\t['ễ', 'e'],\n\t['Ễ', 'E'],\n\t['ệ', 'e'],\n\t['Ệ', 'E'],\n\t['ỉ', 'i'],\n\t['Ỉ', 'I'],\n\t['ị', 'i'],\n\t['Ị', 'I'],\n\t['ọ', 'o'],\n\t['Ọ', 'O'],\n\t['ỏ', 'o'],\n\t['Ỏ', 'O'],\n\t['ố', 'o'],\n\t['Ố', 'O'],\n\t['ồ', 'o'],\n\t['Ồ', 'O'],\n\t['ổ', 'o'],\n\t['Ổ', 'O'],\n\t['ỗ', 'o'],\n\t['Ỗ', 'O'],\n\t['ộ', 'o'],\n\t['Ộ', 'O'],\n\t['ớ', 'o'],\n\t['Ớ', 'O'],\n\t['ờ', 'o'],\n\t['Ờ', 'O'],\n\t['ở', 'o'],\n\t['Ở', 'O'],\n\t['ỡ', 'o'],\n\t['Ỡ', 'O'],\n\t['ợ', 'o'],\n\t['Ợ', 'O'],\n\t['ụ', 'u'],\n\t['Ụ', 'U'],\n\t['ủ', 'u'],\n\t['Ủ', 'U'],\n\t['ứ', 'u'],\n\t['Ứ', 'U'],\n\t['ừ', 'u'],\n\t['Ừ', 'U'],\n\t['ử', 'u'],\n\t['Ử', 'U'],\n\t['ữ', 'u'],\n\t['Ữ', 'U'],\n\t['ự', 'u'],\n\t['Ự', 'U'],\n\t['ỳ', 'y'],\n\t['Ỳ', 'Y'],\n\t['ỵ', 'y'],\n\t['Ỵ', 'Y'],\n\t['ỷ', 'y'],\n\t['Ỷ', 'Y'],\n\t['ỹ', 'y'],\n\t['Ỹ', 'Y'],\n\n\t// Arabic\n\t['ء', 'e'],\n\t['آ', 'a'],\n\t['أ', 'a'],\n\t['ؤ', 'w'],\n\t['إ', 'i'],\n\t['ئ', 'y'],\n\t['ا', 'a'],\n\t['ب', 'b'],\n\t['ة', 't'],\n\t['ت', 't'],\n\t['ث', 'th'],\n\t['ج', 'j'],\n\t['ح', 'h'],\n\t['خ', 'kh'],\n\t['د', 'd'],\n\t['ذ', 'dh'],\n\t['ر', 'r'],\n\t['ز', 'z'],\n\t['س', 's'],\n\t['ش', 'sh'],\n\t['ص', 's'],\n\t['ض', 'd'],\n\t['ط', 't'],\n\t['ظ', 'z'],\n\t['ع', 'e'],\n\t['غ', 'gh'],\n\t['ـ', '_'],\n\t['ف', 'f'],\n\t['ق', 'q'],\n\t['ك', 'k'],\n\t['ل', 'l'],\n\t['م', 'm'],\n\t['ن', 'n'],\n\t['ه', 'h'],\n\t['و', 'w'],\n\t['ى', 'a'],\n\t['ي', 'y'],\n\t['َ‎', 'a'],\n\t['ُ', 'u'],\n\t['ِ‎', 'i'],\n\t['٠', '0'],\n\t['١', '1'],\n\t['٢', '2'],\n\t['٣', '3'],\n\t['٤', '4'],\n\t['٥', '5'],\n\t['٦', '6'],\n\t['٧', '7'],\n\t['٨', '8'],\n\t['٩', '9'],\n\n\t// Persian / Farsi\n\t['چ', 'ch'],\n\t['ک', 'k'],\n\t['گ', 'g'],\n\t['پ', 'p'],\n\t['ژ', 'zh'],\n\t['ی', 'y'],\n\t['۰', '0'],\n\t['۱', '1'],\n\t['۲', '2'],\n\t['۳', '3'],\n\t['۴', '4'],\n\t['۵', '5'],\n\t['۶', '6'],\n\t['۷', '7'],\n\t['۸', '8'],\n\t['۹', '9'],\n\n\t// Pashto\n\t['ټ', 'p'],\n\t['ځ', 'z'],\n\t['څ', 'c'],\n\t['ډ', 'd'],\n\t['ﺫ', 'd'],\n\t['ﺭ', 'r'],\n\t['ړ', 'r'],\n\t['ﺯ', 'z'],\n\t['ږ', 'g'],\n\t['ښ', 'x'],\n\t['ګ', 'g'],\n\t['ڼ', 'n'],\n\t['ۀ', 'e'],\n\t['ې', 'e'],\n\t['ۍ', 'ai'],\n\n\t// Urdu\n\t['ٹ', 't'],\n\t['ڈ', 'd'],\n\t['ڑ', 'r'],\n\t['ں', 'n'],\n\t['ہ', 'h'],\n\t['ھ', 'h'],\n\t['ے', 'e'],\n\n\t// Russian\n\t['А', 'A'],\n\t['а', 'a'],\n\t['Б', 'B'],\n\t['б', 'b'],\n\t['В', 'V'],\n\t['в', 'v'],\n\t['Г', 'G'],\n\t['г', 'g'],\n\t['Д', 'D'],\n\t['д', 'd'],\n\t['Е', 'E'],\n\t['е', 'e'],\n\t['Ж', 'Zh'],\n\t['ж', 'zh'],\n\t['З', 'Z'],\n\t['з', 'z'],\n\t['И', 'I'],\n\t['и', 'i'],\n\t['Й', 'J'],\n\t['й', 'j'],\n\t['К', 'K'],\n\t['к', 'k'],\n\t['Л', 'L'],\n\t['л', 'l'],\n\t['М', 'M'],\n\t['м', 'm'],\n\t['Н', 'N'],\n\t['н', 'n'],\n\t['О', 'O'],\n\t['о', 'o'],\n\t['П', 'P'],\n\t['п', 'p'],\n\t['Р', 'R'],\n\t['р', 'r'],\n\t['С', 'S'],\n\t['с', 's'],\n\t['Т', 'T'],\n\t['т', 't'],\n\t['У', 'U'],\n\t['у', 'u'],\n\t['Ф', 'F'],\n\t['ф', 'f'],\n\t['Х', 'H'],\n\t['х', 'h'],\n\t['Ц', 'Cz'],\n\t['ц', 'cz'],\n\t['Ч', 'Ch'],\n\t['ч', 'ch'],\n\t['Ш', 'Sh'],\n\t['ш', 'sh'],\n\t['Щ', 'Shh'],\n\t['щ', 'shh'],\n\t['Ъ', ''],\n\t['ъ', ''],\n\t['Ы', 'Y'],\n\t['ы', 'y'],\n\t['Ь', ''],\n\t['ь', ''],\n\t['Э', 'E'],\n\t['э', 'e'],\n\t['Ю', 'Yu'],\n\t['ю', 'yu'],\n\t['Я', 'Ya'],\n\t['я', 'ya'],\n\t['Ё', 'Yo'],\n\t['ё', 'yo'],\n\n\t// Romanian\n\t['ă', 'a'],\n\t['Ă', 'A'],\n\t['ș', 's'],\n\t['Ș', 'S'],\n\t['ț', 't'],\n\t['Ț', 'T'],\n\t['ţ', 't'],\n\t['Ţ', 'T'],\n\n\t// Turkish\n\t['ş', 's'],\n\t['Ş', 'S'],\n\t['ç', 'c'],\n\t['Ç', 'C'],\n\t['ğ', 'g'],\n\t['Ğ', 'G'],\n\t['ı', 'i'],\n\t['İ', 'I'],\n\n\t// Armenian\n\t['ա', 'a'],\n\t['Ա', 'A'],\n\t['բ', 'b'],\n\t['Բ', 'B'],\n\t['գ', 'g'],\n\t['Գ', 'G'],\n\t['դ', 'd'],\n\t['Դ', 'D'],\n\t['ե', 'ye'],\n\t['Ե', 'Ye'],\n\t['զ', 'z'],\n\t['Զ', 'Z'],\n\t['է', 'e'],\n\t['Է', 'E'],\n\t['ը', 'y'],\n\t['Ը', 'Y'],\n\t['թ', 't'],\n\t['Թ', 'T'],\n\t['ժ', 'zh'],\n\t['Ժ', 'Zh'],\n\t['ի', 'i'],\n\t['Ի', 'I'],\n\t['լ', 'l'],\n\t['Լ', 'L'],\n\t['խ', 'kh'],\n\t['Խ', 'Kh'],\n\t['ծ', 'ts'],\n\t['Ծ', 'Ts'],\n\t['կ', 'k'],\n\t['Կ', 'K'],\n\t['հ', 'h'],\n\t['Հ', 'H'],\n\t['ձ', 'dz'],\n\t['Ձ', 'Dz'],\n\t['ղ', 'gh'],\n\t['Ղ', 'Gh'],\n\t['ճ', 'tch'],\n\t['Ճ', 'Tch'],\n\t['մ', 'm'],\n\t['Մ', 'M'],\n\t['յ', 'y'],\n\t['Յ', 'Y'],\n\t['ն', 'n'],\n\t['Ն', 'N'],\n\t['շ', 'sh'],\n\t['Շ', 'Sh'],\n\t['ո', 'vo'],\n\t['Ո', 'Vo'],\n\t['չ', 'ch'],\n\t['Չ', 'Ch'],\n\t['պ', 'p'],\n\t['Պ', 'P'],\n\t['ջ', 'j'],\n\t['Ջ', 'J'],\n\t['ռ', 'r'],\n\t['Ռ', 'R'],\n\t['ս', 's'],\n\t['Ս', 'S'],\n\t['վ', 'v'],\n\t['Վ', 'V'],\n\t['տ', 't'],\n\t['Տ', 'T'],\n\t['ր', 'r'],\n\t['Ր', 'R'],\n\t['ց', 'c'],\n\t['Ց', 'C'],\n\t['ու', 'u'],\n\t['ՈՒ', 'U'],\n\t['Ու', 'U'],\n\t['փ', 'p'],\n\t['Փ', 'P'],\n\t['ք', 'q'],\n\t['Ք', 'Q'],\n\t['օ', 'o'],\n\t['Օ', 'O'],\n\t['ֆ', 'f'],\n\t['Ֆ', 'F'],\n\t['և', 'yev'],\n\n\t// Georgian\n\t['ა', 'a'],\n\t['ბ', 'b'],\n\t['გ', 'g'],\n\t['დ', 'd'],\n\t['ე', 'e'],\n\t['ვ', 'v'],\n\t['ზ', 'z'],\n\t['თ', 't'],\n\t['ი', 'i'],\n\t['კ', 'k'],\n\t['ლ', 'l'],\n\t['მ', 'm'],\n\t['ნ', 'n'],\n\t['ო', 'o'],\n\t['პ', 'p'],\n\t['ჟ', 'zh'],\n\t['რ', 'r'],\n\t['ს', 's'],\n\t['ტ', 't'],\n\t['უ', 'u'],\n\t['ფ', 'ph'],\n\t['ქ', 'q'],\n\t['ღ', 'gh'],\n\t['ყ', 'k'],\n\t['შ', 'sh'],\n\t['ჩ', 'ch'],\n\t['ც', 'ts'],\n\t['ძ', 'dz'],\n\t['წ', 'ts'],\n\t['ჭ', 'tch'],\n\t['ხ', 'kh'],\n\t['ჯ', 'j'],\n\t['ჰ', 'h'],\n\n\t// Czech\n\t['č', 'c'],\n\t['ď', 'd'],\n\t['ě', 'e'],\n\t['ň', 'n'],\n\t['ř', 'r'],\n\t['š', 's'],\n\t['ť', 't'],\n\t['ů', 'u'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Ď', 'D'],\n\t['Ě', 'E'],\n\t['Ň', 'N'],\n\t['Ř', 'R'],\n\t['Š', 'S'],\n\t['Ť', 'T'],\n\t['Ů', 'U'],\n\t['Ž', 'Z'],\n\n\t// Dhivehi\n\t['ހ', 'h'],\n\t['ށ', 'sh'],\n\t['ނ', 'n'],\n\t['ރ', 'r'],\n\t['ބ', 'b'],\n\t['ޅ', 'lh'],\n\t['ކ', 'k'],\n\t['އ', 'a'],\n\t['ވ', 'v'],\n\t['މ', 'm'],\n\t['ފ', 'f'],\n\t['ދ', 'dh'],\n\t['ތ', 'th'],\n\t['ލ', 'l'],\n\t['ގ', 'g'],\n\t['ޏ', 'gn'],\n\t['ސ', 's'],\n\t['ޑ', 'd'],\n\t['ޒ', 'z'],\n\t['ޓ', 't'],\n\t['ޔ', 'y'],\n\t['ޕ', 'p'],\n\t['ޖ', 'j'],\n\t['ޗ', 'ch'],\n\t['ޘ', 'tt'],\n\t['ޙ', 'hh'],\n\t['ޚ', 'kh'],\n\t['ޛ', 'th'],\n\t['ޜ', 'z'],\n\t['ޝ', 'sh'],\n\t['ޞ', 's'],\n\t['ޟ', 'd'],\n\t['ޠ', 't'],\n\t['ޡ', 'z'],\n\t['ޢ', 'a'],\n\t['ޣ', 'gh'],\n\t['ޤ', 'q'],\n\t['ޥ', 'w'],\n\t['ަ', 'a'],\n\t['ާ', 'aa'],\n\t['ި', 'i'],\n\t['ީ', 'ee'],\n\t['ު', 'u'],\n\t['ޫ', 'oo'],\n\t['ެ', 'e'],\n\t['ޭ', 'ey'],\n\t['ޮ', 'o'],\n\t['ޯ', 'oa'],\n\t['ް', ''],\n\n\t// Greek\n\t['α', 'a'],\n\t['β', 'v'],\n\t['γ', 'g'],\n\t['δ', 'd'],\n\t['ε', 'e'],\n\t['ζ', 'z'],\n\t['η', 'i'],\n\t['θ', 'th'],\n\t['ι', 'i'],\n\t['κ', 'k'],\n\t['λ', 'l'],\n\t['μ', 'm'],\n\t['ν', 'n'],\n\t['ξ', 'ks'],\n\t['ο', 'o'],\n\t['π', 'p'],\n\t['ρ', 'r'],\n\t['σ', 's'],\n\t['τ', 't'],\n\t['υ', 'y'],\n\t['φ', 'f'],\n\t['χ', 'x'],\n\t['ψ', 'ps'],\n\t['ω', 'o'],\n\t['ά', 'a'],\n\t['έ', 'e'],\n\t['ί', 'i'],\n\t['ό', 'o'],\n\t['ύ', 'y'],\n\t['ή', 'i'],\n\t['ώ', 'o'],\n\t['ς', 's'],\n\t['ϊ', 'i'],\n\t['ΰ', 'y'],\n\t['ϋ', 'y'],\n\t['ΐ', 'i'],\n\t['Α', 'A'],\n\t['Β', 'B'],\n\t['Γ', 'G'],\n\t['Δ', 'D'],\n\t['Ε', 'E'],\n\t['Ζ', 'Z'],\n\t['Η', 'I'],\n\t['Θ', 'TH'],\n\t['Ι', 'I'],\n\t['Κ', 'K'],\n\t['Λ', 'L'],\n\t['Μ', 'M'],\n\t['Ν', 'N'],\n\t['Ξ', 'KS'],\n\t['Ο', 'O'],\n\t['Π', 'P'],\n\t['Ρ', 'R'],\n\t['Σ', 'S'],\n\t['Τ', 'T'],\n\t['Υ', 'Y'],\n\t['Φ', 'F'],\n\t['Χ', 'X'],\n\t['Ψ', 'PS'],\n\t['Ω', 'O'],\n\t['Ά', 'A'],\n\t['Έ', 'E'],\n\t['Ί', 'I'],\n\t['Ό', 'O'],\n\t['Ύ', 'Y'],\n\t['Ή', 'I'],\n\t['Ώ', 'O'],\n\t['Ϊ', 'I'],\n\t['Ϋ', 'Y'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Hungarian\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\t// ['ü', 'u'],\n\t// ['Ü', 'U'],\n\t// ['ű', 'u'],\n\t// ['Ű', 'U'],\n\n\t// Latvian\n\t['ā', 'a'],\n\t['ē', 'e'],\n\t['ģ', 'g'],\n\t['ī', 'i'],\n\t['ķ', 'k'],\n\t['ļ', 'l'],\n\t['ņ', 'n'],\n\t['ū', 'u'],\n\t['Ā', 'A'],\n\t['Ē', 'E'],\n\t['Ģ', 'G'],\n\t['Ī', 'I'],\n\t['Ķ', 'K'],\n\t['Ļ', 'L'],\n\t['Ņ', 'N'],\n\t['Ū', 'U'],\n\t['č', 'c'],\n\t['š', 's'],\n\t['ž', 'z'],\n\t['Č', 'C'],\n\t['Š', 'S'],\n\t['Ž', 'Z'],\n\n\t// Lithuanian\n\t['ą', 'a'],\n\t['č', 'c'],\n\t['ę', 'e'],\n\t['ė', 'e'],\n\t['į', 'i'],\n\t['š', 's'],\n\t['ų', 'u'],\n\t['ū', 'u'],\n\t['ž', 'z'],\n\t['Ą', 'A'],\n\t['Č', 'C'],\n\t['Ę', 'E'],\n\t['Ė', 'E'],\n\t['Į', 'I'],\n\t['Š', 'S'],\n\t['Ų', 'U'],\n\t['Ū', 'U'],\n\n\t// Macedonian\n\t['Ќ', 'Kj'],\n\t['ќ', 'kj'],\n\t['Љ', 'Lj'],\n\t['љ', 'lj'],\n\t['Њ', 'Nj'],\n\t['њ', 'nj'],\n\t['Тс', 'Ts'],\n\t['тс', 'ts'],\n\n\t// Polish\n\t['ą', 'a'],\n\t['ć', 'c'],\n\t['ę', 'e'],\n\t['ł', 'l'],\n\t['ń', 'n'],\n\t['ś', 's'],\n\t['ź', 'z'],\n\t['ż', 'z'],\n\t['Ą', 'A'],\n\t['Ć', 'C'],\n\t['Ę', 'E'],\n\t['Ł', 'L'],\n\t['Ń', 'N'],\n\t['Ś', 'S'],\n\t['Ź', 'Z'],\n\t['Ż', 'Z'],\n\n\t// Disabled as it conflicts with Vietnamese.\n\t// Serbian\n\t// ['љ', 'lj'],\n\t// ['њ', 'nj'],\n\t// ['Љ', 'Lj'],\n\t// ['Њ', 'Nj'],\n\t// ['đ', 'dj'],\n\t// ['Đ', 'Dj'],\n\t// ['ђ', 'dj'],\n\t// ['ј', 'j'],\n\t// ['ћ', 'c'],\n\t// ['џ', 'dz'],\n\t// ['Ђ', 'Dj'],\n\t// ['Ј', 'j'],\n\t// ['Ћ', 'C'],\n\t// ['Џ', 'Dz'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Slovak\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ľ', 'l'],\n\t// ['ĺ', 'l'],\n\t// ['ŕ', 'r'],\n\t// ['Ľ', 'L'],\n\t// ['Ĺ', 'L'],\n\t// ['Ŕ', 'R'],\n\n\t// Disabled as it conflicts with German and Latin.\n\t// Swedish\n\t// ['å', 'o'],\n\t// ['Å', 'o'],\n\t// ['ä', 'a'],\n\t// ['Ä', 'A'],\n\t// ['ë', 'e'],\n\t// ['Ë', 'E'],\n\t// ['ö', 'o'],\n\t// ['Ö', 'O'],\n\n\t// Ukrainian\n\t['Є', 'Ye'],\n\t['І', 'I'],\n\t['Ї', 'Yi'],\n\t['Ґ', 'G'],\n\t['є', 'ye'],\n\t['і', 'i'],\n\t['ї', 'yi'],\n\t['ґ', 'g']\n\n\t// Danish\n\t// ['Æ', 'Ae'],\n\t// ['Ø', 'Oe'],\n\t// ['Å', 'Aa'],\n\t// ['æ', 'ae'],\n\t// ['ø', 'oe'],\n\t// ['å', 'aa']\n];\n", "'use strict';\nconst deburr = require('lodash.deburr');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst builtinReplacements = require('./replacements');\n\nconst doCustomReplacements = (string, replacements) => {\n\tfor (const [key, value] of replacements) {\n\t\t// TODO: Use `String#replaceAll()` when targeting Node.js 16.\n\t\tstring = string.replace(new RegExp(escapeStringRegexp(key), 'g'), value);\n\t}\n\n\treturn string;\n};\n\nmodule.exports = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tcustomReplacements: [],\n\t\t...options\n\t};\n\n\tconst customReplacements = new Map([\n\t\t...builtinReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = string.normalize();\n\tstring = doCustomReplacements(string, customReplacements);\n\tstring = deburr(string);\n\n\treturn string;\n};\n", "'use strict';\n\nmodule.exports = [\n\t['&', ' and '],\n\t['🦄', ' unicorn '],\n\t['♥', ' love ']\n];\n", "'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst transliterate = require('@sindresorhus/transliterate');\nconst builtinOverridableReplacements = require('./overridable-replacements');\n\nconst decamelize = string => {\n\treturn string\n\t\t// Separate capitalized words.\n\t\t.replace(/([A-Z]{2,})(\\d+)/g, '$1 $2')\n\t\t.replace(/([a-z\\d]+)([A-Z]{2,})/g, '$1 $2')\n\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1 $2');\n};\n\nconst removeMootSeparators = (string, separator) => {\n\tconst escapedSeparator = escapeStringRegexp(separator);\n\n\treturn string\n\t\t.replace(new RegExp(`${escapedSeparator}{2,}`, 'g'), separator)\n\t\t.replace(new RegExp(`^${escapedSeparator}|${escapedSeparator}$`, 'g'), '');\n};\n\nconst slugify = (string, options) => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got \\`${typeof string}\\``);\n\t}\n\n\toptions = {\n\t\tseparator: '-',\n\t\tlowercase: true,\n\t\tdecamelize: true,\n\t\tcustomReplacements: [],\n\t\tpreserveLeadingUnderscore: false,\n\t\t...options\n\t};\n\n\tconst shouldPrependUnderscore = options.preserveLeadingUnderscore && string.startsWith('_');\n\n\tconst customReplacements = new Map([\n\t\t...builtinOverridableReplacements,\n\t\t...options.customReplacements\n\t]);\n\n\tstring = transliterate(string, {customReplacements});\n\n\tif (options.decamelize) {\n\t\tstring = decamelize(string);\n\t}\n\n\tlet patternSlug = /[^a-zA-Z\\d]+/g;\n\n\tif (options.lowercase) {\n\t\tstring = string.toLowerCase();\n\t\tpatternSlug = /[^a-z\\d]+/g;\n\t}\n\n\tstring = string.replace(patternSlug, options.separator);\n\tstring = string.replace(/\\\\/g, '');\n\tif (options.separator) {\n\t\tstring = removeMootSeparators(string, options.separator);\n\t}\n\n\tif (shouldPrependUnderscore) {\n\t\tstring = `_${string}`;\n\t}\n\n\treturn string;\n};\n\nconst counter = () => {\n\tconst occurrences = new Map();\n\n\tconst countable = (string, options) => {\n\t\tstring = slugify(string, options);\n\n\t\tif (!string) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst stringLower = string.toLowerCase();\n\t\tconst numberless = occurrences.get(stringLower.replace(/(?:-\\d+?)+?$/, '')) || 0;\n\t\tconst counter = occurrences.get(stringLower);\n\t\toccurrences.set(stringLower, typeof counter === 'number' ? counter + 1 : 1);\n\t\tconst newCounter = occurrences.get(stringLower) || 2;\n\t\tif (newCounter >= 2 || numberless > 2) {\n\t\t\tstring = `${string}-${newCounter}`;\n\t\t}\n\n\t\treturn string;\n\t};\n\n\tcountable.reset = () => {\n\t\toccurrences.clear();\n\t};\n\n\treturn countable;\n};\n\nmodule.exports = slugify;\nmodule.exports.counter = counter;\n", "export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  main: [{ action: 'plugin::content-type-builder.read', subject: null }],\n};\n\nexport const MAX_COMPONENT_DEPTH = 6;\n", "import pluginPkg from '../../package.json';\n\nexport const pluginId = pluginPkg.name.replace(/^@strapi\\//i, '');\n", "import type { Schema } from '@strapi/types';\n\n/**\n *\n * Retrieves the relation type\n */\nexport const getRelationType = (\n  relation: Schema.Attribute.RelationKind.WithTarget | undefined,\n  targetAttribute?: string | null\n) => {\n  const hasNotTargetAttribute = targetAttribute === undefined || targetAttribute === null;\n\n  if (relation === 'oneToOne' && hasNotTargetAttribute) {\n    return 'oneWay';\n  }\n\n  if (relation === 'oneToMany' && hasNotTargetAttribute) {\n    return 'manyWay';\n  }\n\n  return relation;\n};\n", "const makeUnique = <T extends string>(array: T[]): T[] => [...new Set(array)];\n\nexport { makeUnique };\n", "export const ADD_ATTRIBUTE = 'ContentTypeBuilder/DataManagerProvider/ADD_ATTRIBUTE';\nexport const ADD_CUSTOM_FIELD_ATTRIBUTE =\n  'ContentTypeBuilder/DataManagerProvider/ADD_CUSTOM_FIELD_ATTRIBUTE';\nexport const ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE =\n  'ContentTypeBuilder/DataManagerProvider/ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE';\nexport const CHANGE_DYNAMIC_ZONE_COMPONENTS =\n  'ContentTypeBuilder/DataManagerProvider/CHANGE_DYNAMIC_ZONE_COMPONENTS';\nexport const CREATE_SCHEMA = 'ContentTypeBuilder/DataManagerProvider/CREATE_SCHEMA';\nexport const CREATE_COMPONENT_SCHEMA =\n  'ContentTypeBuilder/DataManagerProvider/CREATE_COMPONENT_SCHEMA';\nexport const DELETE_NOT_SAVED_TYPE = 'ContentTypeBuilder/DataManagerProvider/DELETE_NOT_SAVED_TYPE';\nexport const EDIT_ATTRIBUTE = 'ContentTypeBuilder/DataManagerProvider/EDIT_ATTRIBUTE';\nexport const EDIT_CUSTOM_FIELD_ATTRIBUTE =\n  'ContentTypeBuilder/DataManagerProvider/EDIT_CUSTOM_FIELD_ATTRIBUTE';\nexport const GET_DATA_SUCCEEDED = 'ContentTypeBuilder/DataManagerProvider/GET_DATA_SUCCEEDED';\nexport const RELOAD_PLUGIN = 'ContentTypeBuilder/DataManagerProvider/RELOAD_PLUGIN';\nexport const REMOVE_FIELD_FROM_DISPLAYED_COMPONENT =\n  'ContentTypeBuilder/DataManagerProvider/REMOVE_FIELD_FROM_DISPLAYED_COMPONENT';\nexport const REMOVE_COMPONENT_FROM_DYNAMIC_ZONE =\n  'ContentTypeBuilder/DataManagerProvider/REMOVE_COMPONENT_FROM_DYNAMIC_ZONE';\nexport const REMOVE_FIELD = 'ContentTypeBuilder/DataManagerProvider/REMOVE_FIELD';\nexport const SET_MODIFIED_DATA = 'ContentTypeBuilder/DataManagerProvider/SET_MODIFIED_DATA';\nexport const UPDATE_SCHEMA = 'ContentTypeBuilder/DataManagerProvider/UPDATE_SCHEMA';\nexport const UPDATE_INITIAL_STATE = 'ContentTypeBuilder/DataManagerProvider/UPDATE_INITIAL_STATE';\n", "import get from 'lodash/get';\n\nimport { makeUnique } from '../../../utils/makeUnique';\n\nimport type { AttributeType, Components } from '../../../types';\nimport type { Internal } from '@strapi/types';\n\nconst retrieveComponentsFromSchema = (\n  attributes: AttributeType[],\n  allComponentsData: Components\n): Internal.UID.Component[] => {\n  const allComponents: Internal.UID.Component[] = attributes.reduce((acc: any, current) => {\n    const type = current.type;\n    if (type === 'component') {\n      const currentComponentName = current.component;\n      // Push the existing compo\n      acc.push(currentComponentName);\n\n      const currentComponentAttributes = get(\n        allComponentsData,\n        [currentComponentName, 'schema', 'attributes'],\n        []\n      );\n\n      // Retrieve the nested ones\n      acc.push(...retrieveComponentsFromSchema(currentComponentAttributes, allComponentsData));\n    }\n\n    if (type === 'dynamiczone') {\n      const dynamicZoneComponents = current.components;\n      const componentsFromDZComponents = dynamicZoneComponents.reduce((acc2: any, currentUid) => {\n        const compoAttrs = get(allComponentsData, [currentUid, 'schema', 'attributes'], []);\n\n        return [...acc2, ...retrieveComponentsFromSchema(compoAttrs, allComponentsData)];\n      }, []);\n\n      return [...acc, ...dynamicZoneComponents, ...componentsFromDZComponents];\n    }\n\n    return acc;\n  }, []);\n\n  return makeUnique<Internal.UID.Component>(allComponents);\n};\n\nexport { retrieveComponentsFromSchema };\n", "import produce, { current } from 'immer';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { makeUnique } from '../../utils/makeUnique';\n\nimport * as actions from './constants';\nimport { retrieveComponentsFromSchema } from './utils/retrieveComponentsFromSchema';\n\nimport type { DataManagerStateType, ContentType, AttributeType, Component } from '../../types';\nimport type { Internal, Schema } from '@strapi/types';\n\n// TODO: Define all possible actions based on type\nexport type Action = {\n  type: string;\n  uid?: string;\n  mainDataKey: 'component' | 'components' | 'contentTypes' | 'contentType';\n  schemaType: 'component' | 'contentType';\n  attributeToRemoveName?: string;\n  [key: string]: any;\n};\n\nconst initialState: DataManagerStateType = {\n  components: {},\n  contentTypes: {},\n  initialComponents: {},\n  initialContentTypes: {},\n  initialData: {},\n  modifiedData: {\n    components: {},\n    contentTypes: {},\n  },\n  reservedNames: {},\n  isLoading: true,\n  isLoadingForDataToBeSet: true,\n};\n\nconst ONE_SIDE_RELATIONS = ['oneWay', 'manyWay'];\n\nconst getOppositeRelation = (originalRelation?: Schema.Attribute.RelationKind.WithTarget) => {\n  if (originalRelation === 'manyToOne') {\n    return 'oneToMany';\n  }\n\n  if (originalRelation === 'oneToMany') {\n    return 'manyToOne';\n  }\n\n  return originalRelation;\n};\n\nconst findAttributeIndex = (schema: any, attributeToFind?: string) => {\n  return schema.schema.attributes.findIndex(\n    ({ name }: { name: string }) => name === attributeToFind\n  );\n};\n\nconst reducer = (state = initialState, action: Action) =>\n  produce(state, (draftState: any) => {\n    switch (action.type) {\n      case actions.ADD_ATTRIBUTE: {\n        const {\n          attributeToSet: { name, ...rest },\n          forTarget,\n          targetUid,\n        } = action;\n        delete rest.createComponent;\n\n        const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n          ? [forTarget]\n          : [forTarget, targetUid];\n\n        const currentAttributes = get(\n          state,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n          []\n        ).slice();\n\n        // Add the createdAttribute\n        const updatedAttributes = [...currentAttributes, { ...rest, name }];\n\n        set(\n          draftState,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n          updatedAttributes\n        );\n\n        if (action.shouldAddComponentToData) {\n          const componentToAddUID = rest.component;\n          const componentToAdd = state.components[componentToAddUID];\n          const isTemporaryComponent = componentToAdd?.isTemporary;\n          const hasComponentAlreadyBeenAdded =\n            state.modifiedData.components?.[componentToAddUID] !== undefined;\n\n          if (isTemporaryComponent || hasComponentAlreadyBeenAdded) {\n            break;\n          }\n\n          // Initialize modifiedData.components if it is undefined\n          if (!draftState.modifiedData.components) {\n            draftState.modifiedData.components = {};\n          }\n\n          // Add the added component to the modifiedData.components\n          draftState.modifiedData.components[componentToAddUID] = componentToAdd;\n\n          const nestedComponents = retrieveComponentsFromSchema(\n            componentToAdd.schema.attributes as AttributeType[],\n            state.components\n          );\n\n          // We dont' need to set the already added components otherwise all modifications will be lost so we need to only add the not modified ones\n          const nestedComponentsToAddInModifiedData = nestedComponents.filter(\n            (compoUID: Internal.UID.Component) => {\n              return get(state, ['modifiedData', 'components', compoUID]) === undefined;\n            }\n          );\n\n          nestedComponentsToAddInModifiedData.forEach((compoUID: Internal.UID.Component) => {\n            const compoSchema = get(state, ['components', compoUID], {}) as Component;\n            const isTemporary = compoSchema.isTemporary || false;\n\n            // If the nested component has not been saved we don't need to add them as they are already in the state\n            if (!isTemporary) {\n              if (!draftState.modifiedData.components) {\n                draftState.modifiedData.components = {};\n              }\n              draftState.modifiedData.components[compoUID] = compoSchema;\n            }\n          });\n\n          break;\n        }\n\n        const isCreatingRelationAttribute = rest.type === 'relation';\n\n        if (isCreatingRelationAttribute) {\n          const target = rest.target;\n          const targetAttribute = rest.targetAttribute || null;\n          const relation = rest.relation;\n          const relationType = getRelationType(relation, targetAttribute);\n          const currentUid = get(state, ['modifiedData', ...pathToDataToEdit, 'uid']);\n\n          // When the user in creating a relation with the same content type we need to create another attribute\n          // that is the opposite of the created one\n          if (\n            rest.type === 'relation' &&\n            relationType !== 'oneWay' &&\n            relationType !== 'manyWay' &&\n            target === currentUid\n          ) {\n            const oppositeAttribute = {\n              name: targetAttribute,\n              relation: getOppositeRelation(relationType),\n              target,\n              targetAttribute: name,\n              type: 'relation',\n            } as AttributeType;\n\n            if (rest.private) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              oppositeAttribute.private = rest.private;\n            }\n\n            const attributesToSet = [...updatedAttributes, oppositeAttribute];\n\n            set(\n              draftState,\n              ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n              attributesToSet\n            );\n          }\n        }\n\n        break;\n      }\n      case actions.ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE: {\n        const { dynamicZoneTarget, componentsToAdd } = action;\n\n        const dzAttributeIndex = findAttributeIndex(\n          state.modifiedData.contentType,\n          dynamicZoneTarget\n        );\n\n        componentsToAdd.forEach((componentUid: Internal.UID.Component) => {\n          if (\n            !draftState.modifiedData.contentType?.schema.attributes[dzAttributeIndex].components\n          ) {\n            draftState.modifiedData.contentType.schema.attributes[dzAttributeIndex].components = [];\n          }\n          draftState.modifiedData.contentType.schema.attributes[dzAttributeIndex].components.push(\n            componentUid\n          );\n        });\n\n        break;\n      }\n      case actions.ADD_CUSTOM_FIELD_ATTRIBUTE: {\n        const {\n          attributeToSet: { name, ...rest },\n          forTarget,\n          targetUid,\n        } = action;\n\n        const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n          ? [forTarget]\n          : [forTarget, targetUid];\n\n        const currentAttributes = get(\n          state,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n          []\n        ).slice();\n\n        // Add the createdAttribute\n        const updatedAttributes = [...currentAttributes, { ...rest, name }];\n\n        set(\n          draftState,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n          updatedAttributes\n        );\n\n        break;\n      }\n      case actions.CHANGE_DYNAMIC_ZONE_COMPONENTS: {\n        const { dynamicZoneTarget, newComponents } = action;\n\n        const dzAttributeIndex = findAttributeIndex(\n          state.modifiedData.contentType,\n          dynamicZoneTarget\n        );\n\n        const currentDZComponents =\n          (state.modifiedData.contentType?.schema.attributes[dzAttributeIndex]).components;\n\n        const updatedComponents = makeUnique([...currentDZComponents, ...newComponents]);\n\n        (draftState.modifiedData.contentType?.schema.attributes[dzAttributeIndex]).components =\n          updatedComponents;\n\n        // Retrieve all the components that needs to be added to the modifiedData.components\n        const nestedComponents = retrieveComponentsFromSchema(\n          current(draftState.modifiedData.contentType.schema.attributes),\n          state.components\n        );\n\n        // We dont' need to set the already added components otherwise all modifications will be lost so we need to only add the not modified ones\n        const nestedComponentsToAddInModifiedData = nestedComponents.filter((compoUID) => {\n          return get(state, ['modifiedData', 'components', compoUID]) === undefined;\n        });\n\n        nestedComponentsToAddInModifiedData.forEach((compoUID: Internal.UID.Component) => {\n          const compoSchema = get(state, ['components', compoUID], {}) as Component;\n          const isTemporary = compoSchema.isTemporary || false;\n\n          // If the nested component has not been saved we don't need to add them as they are already in the state\n          if (!isTemporary) {\n            if (!draftState.modifiedData.components) {\n              draftState.modifiedData.components = {};\n            }\n            draftState.modifiedData.components[compoUID] = compoSchema;\n          }\n        });\n\n        break;\n      }\n      case actions.CREATE_COMPONENT_SCHEMA: {\n        const newSchema: Component = {\n          uid: action.uid as Internal.UID.Component,\n          isTemporary: true,\n          category: action.componentCategory,\n          schema: {\n            ...action.data,\n            attributes: [],\n          },\n        };\n        draftState.components[action.uid as string] = newSchema;\n\n        if (action.shouldAddComponentToData) {\n          draftState.modifiedData.components[action.uid as string] = newSchema;\n        }\n\n        break;\n      }\n      case actions.CREATE_SCHEMA: {\n        const newSchema: ContentType = {\n          uid: action.uid as Internal.UID.ContentType,\n          isTemporary: true,\n          schema: {\n            ...action.data,\n            attributes: [],\n          },\n        };\n\n        draftState.contentTypes[action.uid as string] = newSchema;\n\n        break;\n      }\n      case actions.EDIT_ATTRIBUTE: {\n        const {\n          attributeToSet: { name, ...rest },\n          forTarget,\n          targetUid,\n          initialAttribute,\n        } = action;\n\n        const initialAttributeName = initialAttribute.name;\n        const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n          ? [forTarget]\n          : [forTarget, targetUid];\n\n        const initialAttributeIndex = findAttributeIndex(\n          get(state, ['modifiedData', ...pathToDataToEdit]),\n          initialAttributeName\n        );\n\n        const isEditingRelation = rest.type === 'relation';\n\n        if (!isEditingRelation) {\n          set(\n            draftState,\n            ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes', initialAttributeIndex],\n            action.attributeToSet\n          );\n\n          break;\n        }\n\n        const updatedAttributes: AttributeType[] = get(state, [\n          'modifiedData',\n          ...pathToDataToEdit,\n          'schema',\n          'attributes',\n        ]).slice();\n\n        // First create the current relation attribute updated\n        const toSet = {\n          name,\n          relation: rest.relation,\n          target: rest.target,\n          targetAttribute: rest.targetAttribute,\n          type: 'relation',\n        } as AttributeType;\n\n        if (rest.private) {\n          toSet.private = rest.private;\n        }\n\n        if (rest.pluginOptions) {\n          toSet.pluginOptions = rest.pluginOptions;\n        }\n\n        const currentAttributeIndex = updatedAttributes.findIndex((value: AttributeType) => {\n          return value.name !== undefined && value.name === initialAttribute.name;\n        });\n\n        // First set it in the updatedAttributes\n        if (currentAttributeIndex !== -1) {\n          updatedAttributes.splice(currentAttributeIndex, 1, toSet);\n        }\n\n        let oppositeAttributeNameToRemove: string | null = null;\n        let oppositeAttributeNameToUpdate: string | null = null;\n        let oppositeAttributeToCreate: AttributeType | null = null;\n        let initialOppositeAttribute = null;\n\n        const currentUid = get(state, ['modifiedData', ...pathToDataToEdit, 'uid']);\n        const didChangeTargetRelation = initialAttribute.target !== rest.target;\n        const didCreateInternalRelation = rest.target === currentUid;\n        const relationType = getRelationType(rest.relation, rest.targetAttribute);\n        const initialRelationType = getRelationType(\n          initialAttribute.relation,\n          initialAttribute.targetAttribute\n        );\n        const hadInternalRelation = initialAttribute.target === currentUid;\n        const didChangeRelationType = initialRelationType !== relationType;\n        const shouldRemoveOppositeAttributeBecauseOfTargetChange =\n          didChangeTargetRelation &&\n          !didCreateInternalRelation &&\n          hadInternalRelation &&\n          isEditingRelation;\n        const shouldRemoveOppositeAttributeBecauseOfRelationTypeChange =\n          didChangeRelationType &&\n          hadInternalRelation &&\n          ['oneWay', 'manyWay'].includes(relationType!) &&\n          isEditingRelation;\n        const shouldUpdateOppositeAttributeBecauseOfRelationTypeChange =\n          !ONE_SIDE_RELATIONS.includes(initialRelationType!) &&\n          !ONE_SIDE_RELATIONS.includes(relationType!) &&\n          hadInternalRelation &&\n          didCreateInternalRelation &&\n          isEditingRelation;\n        const shouldCreateOppositeAttributeBecauseOfRelationTypeChange =\n          ONE_SIDE_RELATIONS.includes(initialRelationType!) &&\n          !ONE_SIDE_RELATIONS.includes(relationType!) &&\n          hadInternalRelation &&\n          didCreateInternalRelation &&\n          isEditingRelation;\n        const shouldCreateOppositeAttributeBecauseOfTargetChange =\n          didChangeTargetRelation &&\n          didCreateInternalRelation &&\n          !ONE_SIDE_RELATIONS.includes(relationType!);\n\n        // Store opposite attribute name to remove at the end of the loop\n        if (\n          shouldRemoveOppositeAttributeBecauseOfTargetChange ||\n          shouldRemoveOppositeAttributeBecauseOfRelationTypeChange\n        ) {\n          oppositeAttributeNameToRemove = initialAttribute.targetAttribute;\n        }\n\n        // In case of oneWay or manyWay relation there isn't an opposite attribute\n        if (oppositeAttributeNameToRemove) {\n          const indexToRemove = updatedAttributes.findIndex(\n            (value) => value.name === oppositeAttributeNameToRemove\n          );\n\n          updatedAttributes.splice(indexToRemove, 1);\n        }\n\n        // In order to preserve plugin options need to get the initial opposite attribute settings\n        if (!shouldRemoveOppositeAttributeBecauseOfTargetChange) {\n          const initialTargetContentType = get(state, [\n            'initialContentTypes',\n            initialAttribute.target,\n          ]);\n\n          if (initialTargetContentType) {\n            const oppositeAttributeIndex = findAttributeIndex(\n              initialTargetContentType,\n              initialAttribute.targetAttribute\n            );\n\n            initialOppositeAttribute = get(state, [\n              'initialContentTypes',\n              initialAttribute.target,\n              'schema',\n              'attributes',\n              oppositeAttributeIndex,\n            ]);\n          }\n        }\n\n        // Create the opposite attribute\n        if (\n          shouldCreateOppositeAttributeBecauseOfRelationTypeChange ||\n          shouldCreateOppositeAttributeBecauseOfTargetChange\n        ) {\n          oppositeAttributeToCreate = {\n            name: rest.targetAttribute,\n            relation: getOppositeRelation(relationType),\n            target: rest.target,\n            targetAttribute: name,\n            type: 'relation',\n          } as AttributeType;\n\n          if (rest.private) {\n            oppositeAttributeToCreate.private = rest.private;\n          }\n\n          if (initialOppositeAttribute && initialOppositeAttribute.pluginOptions) {\n            oppositeAttributeToCreate.pluginOptions = initialOppositeAttribute.pluginOptions;\n          }\n\n          const indexOfInitialAttribute = updatedAttributes.findIndex(\n            ({ name }) => name === initialAttribute.name\n          );\n          const indexOfUpdatedAttribute = updatedAttributes.findIndex(\n            ({ name: attrName }) => name === attrName\n          );\n\n          const indexToInsert =\n            (indexOfInitialAttribute === -1 ? indexOfUpdatedAttribute : indexOfInitialAttribute) +\n            1;\n\n          updatedAttributes.splice(indexToInsert, 0, oppositeAttributeToCreate);\n        }\n\n        if (shouldUpdateOppositeAttributeBecauseOfRelationTypeChange) {\n          oppositeAttributeNameToUpdate = initialAttribute.targetAttribute;\n\n          oppositeAttributeToCreate = {\n            name: rest.targetAttribute,\n            relation: getOppositeRelation(relationType),\n            target: rest.target,\n            targetAttribute: name,\n            type: 'relation',\n          } as AttributeType;\n\n          if (rest.private) {\n            oppositeAttributeToCreate.private = rest.private;\n          }\n\n          if (initialOppositeAttribute && initialOppositeAttribute.pluginOptions) {\n            oppositeAttributeToCreate.pluginOptions = initialOppositeAttribute.pluginOptions;\n          }\n\n          if (oppositeAttributeNameToUpdate) {\n            const indexToUpdate = updatedAttributes.findIndex(\n              ({ name }) => name === oppositeAttributeNameToUpdate\n            );\n\n            updatedAttributes.splice(indexToUpdate, 1, oppositeAttributeToCreate);\n          }\n        }\n\n        set(\n          draftState,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes'],\n          updatedAttributes\n        );\n\n        break;\n      }\n      case actions.EDIT_CUSTOM_FIELD_ATTRIBUTE: {\n        const { forTarget, targetUid, initialAttribute, attributeToSet } = action;\n\n        const initialAttributeName = initialAttribute.name;\n        const pathToDataToEdit = ['component', 'contentType'].includes(forTarget)\n          ? [forTarget]\n          : [forTarget, targetUid];\n\n        const initialAttributeIndex = findAttributeIndex(\n          get(state, ['modifiedData', ...pathToDataToEdit]),\n          initialAttributeName\n        );\n\n        set(\n          draftState,\n          ['modifiedData', ...pathToDataToEdit, 'schema', 'attributes', initialAttributeIndex],\n          attributeToSet\n        );\n\n        break;\n      }\n      case actions.GET_DATA_SUCCEEDED: {\n        draftState.components = action.components;\n        draftState.initialComponents = action.components;\n        draftState.initialContentTypes = action.contentTypes;\n        draftState.contentTypes = action.contentTypes;\n        draftState.reservedNames = action.reservedNames;\n        draftState.isLoading = false;\n        break;\n      }\n      case actions.UPDATE_INITIAL_STATE: {\n        draftState.initialData = draftState.modifiedData;\n\n        break;\n      }\n      case actions.DELETE_NOT_SAVED_TYPE: {\n        // Doing so will also reset the modified and the initial data\n        draftState.contentTypes = state.initialContentTypes;\n        draftState.components = state.initialComponents;\n\n        break;\n      }\n      case actions.RELOAD_PLUGIN: {\n        return initialState;\n      }\n      case actions.REMOVE_COMPONENT_FROM_DYNAMIC_ZONE: {\n        const dzAttributeIndex = findAttributeIndex(state.modifiedData.contentType, action.dzName);\n        draftState.modifiedData.contentType.schema.attributes[dzAttributeIndex].components.splice(\n          action.componentToRemoveIndex,\n          1\n        );\n\n        break;\n      }\n      case actions.REMOVE_FIELD: {\n        const { mainDataKey, attributeToRemoveName } = action;\n        const pathToAttributes = ['modifiedData', mainDataKey, 'schema', 'attributes'];\n        const attributeToRemoveIndex = findAttributeIndex(\n          state.modifiedData[mainDataKey],\n          attributeToRemoveName\n        );\n\n        const pathToAttributeToRemove = [...pathToAttributes, attributeToRemoveIndex];\n        const attributeToRemoveData = get(state, pathToAttributeToRemove);\n        const isRemovingRelationAttribute = attributeToRemoveData.type === 'relation';\n        // Only content types can have relations with themselves since\n        // components can only have oneWay or manyWay relations\n        const canTheAttributeToRemoveHaveARelationWithItself = mainDataKey === 'contentType';\n\n        if (isRemovingRelationAttribute && canTheAttributeToRemoveHaveARelationWithItself) {\n          const { target, relation, targetAttribute } = attributeToRemoveData;\n          const relationType = getRelationType(relation, targetAttribute);\n\n          const uid = state.modifiedData.contentType?.uid;\n          const shouldRemoveOppositeAttribute =\n            target === uid && !ONE_SIDE_RELATIONS.includes(relationType!);\n\n          if (shouldRemoveOppositeAttribute) {\n            const attributes: AttributeType[] =\n              state.modifiedData[mainDataKey]?.schema.attributes.slice();\n            const nextAttributes = attributes.filter((attribute) => {\n              if (attribute.name === attributeToRemoveName) {\n                return false;\n              }\n\n              if (attribute.target === uid && attribute.targetAttribute === attributeToRemoveName) {\n                return false;\n              }\n\n              return true;\n            });\n\n            draftState.modifiedData[mainDataKey].schema.attributes = nextAttributes;\n\n            break;\n          }\n        }\n\n        // Find all uid fields that have the targetField set to the field we are removing\n\n        const uidFieldsToUpdate: string[] = state.modifiedData[\n          mainDataKey\n        ]!.schema.attributes.slice().reduce((acc: string[], current: AttributeType) => {\n          if (current.type !== 'uid') {\n            return acc;\n          }\n\n          if (current.targetField !== attributeToRemoveName) {\n            return acc;\n          }\n\n          acc.push(current.name as string);\n\n          return acc;\n        }, []);\n\n        uidFieldsToUpdate.forEach((fieldName) => {\n          const fieldIndex = findAttributeIndex(state.modifiedData[mainDataKey], fieldName);\n\n          delete draftState.modifiedData[mainDataKey]?.schema.attributes[fieldIndex].targetField;\n        });\n\n        draftState.modifiedData[mainDataKey]?.schema.attributes.splice(attributeToRemoveIndex, 1);\n\n        break;\n      }\n      case actions.REMOVE_FIELD_FROM_DISPLAYED_COMPONENT: {\n        const { attributeToRemoveName, componentUid } = action;\n\n        const attributeToRemoveIndex = findAttributeIndex(\n          state.modifiedData.components?.[componentUid],\n          attributeToRemoveName\n        );\n\n        draftState.modifiedData.components?.[componentUid]?.schema?.attributes?.splice(\n          attributeToRemoveIndex,\n          1\n        );\n\n        break;\n      }\n      case actions.SET_MODIFIED_DATA: {\n        draftState.isLoadingForDataToBeSet = false;\n        draftState.initialData = action.schemaToSet;\n        draftState.modifiedData = action.schemaToSet;\n\n        // Reset the state with the initial data\n        // All created components and content types will be lost\n        if (!action.hasJustCreatedSchema) {\n          draftState.components = state.initialComponents;\n          draftState.contentTypes = state.initialContentTypes;\n        }\n\n        break;\n      }\n      case actions.UPDATE_SCHEMA: {\n        const {\n          data: { displayName, category, icon, kind },\n          schemaType,\n          uid,\n        } = action;\n\n        draftState.modifiedData[schemaType].schema.displayName = displayName;\n\n        if (action.schemaType === 'component') {\n          draftState.modifiedData.component.category = category;\n          draftState.modifiedData.component.schema.icon = icon;\n          const addedComponent = current(draftState.modifiedData.component);\n          draftState.components[uid as string] = addedComponent;\n\n          break;\n        }\n\n        draftState.modifiedData.contentType.schema.kind = kind;\n\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\nexport { initialState, reducer };\n", "import slugify from '@sindresorhus/slugify';\n\nexport const nameToSlug = (name: string) => slugify(name, { separator: '-' });\n", "export const ON_CHANGE = 'ContentTypeBuilder/FormModal/ON_CHANGE';\nexport const ON_CHANGE_RELATION_TARGET = 'ContentTypeBuilder/FormModal/ON_CHANGE_RELATION_TARGET';\nexport const ON_CHANGE_RELATION_TYPE = 'ContentTypeBuilder/FormModal/ON_CHANGE_RELATION_TYPE';\nexport const RESET_PROPS = 'ContentTypeBuilder/FormModal/RESET_PROPS';\nexport const RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO =\n  'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO';\nexport const RESET_PROPS_AND_SAVE_CURRENT_DATA =\n  'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SAVE_CURRENT_DATA';\nexport const RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ =\n  'ContentTypeBuilder/FormModal/RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ';\nexport const SET_DATA_TO_EDIT = 'ContentTypeBuilder/FormModal/SET_DATA_TO_EDIT';\nexport const SET_ATTRIBUTE_DATA_SCHEMA = 'ContentTypeBuilder/FormModal/SET_ATTRIBUTE_DATA_SCHEMA';\nexport const SET_CUSTOM_FIELD_DATA_SCHEMA =\n  'ContentTypeBuilder/FormModal/SET_CUSTOM_FIELD_DATA_SCHEMA';\nexport const SET_DYNAMIC_ZONE_DATA_SCHEMA =\n  'ContentTypeBuilder/FormModal/SET_DYNAMIC_ZONE_DATA_SCHEMA';\nexport const SET_ERRORS = 'ContentTypeBuilder/FormModal/SET_ERRORS';\n", "import { nameToSlug } from '../../../utils/nameToSlug';\n\nimport type { Internal } from '@strapi/types';\n\nconst createUid = (name: string): Internal.UID.ContentType => {\n  const modelName = nameToSlug(name);\n  return `api::${modelName}.${modelName}`;\n};\n\n// From `content-type-builder/services/Components/createComponentUid`\nconst createComponentUid = (name: string, category: string): Internal.UID.Component => {\n  return `${nameToSlug(category)}.${nameToSlug(name)}`;\n};\n\nexport { createComponentUid, createUid };\n", "export const customFieldDefaultOptionsReducer = (acc: any, option: any) => {\n  if (option.items) {\n    return option.items.reduce(customFieldDefaultOptionsReducer, acc);\n  }\n\n  if ('defaultValue' in option) {\n    const { name, defaultValue } = option;\n    acc.push({ name, defaultValue });\n  }\n\n  return acc;\n};\n", "/* eslint-disable no-confusing-arrow */\n\nimport type { Schema } from '@strapi/types';\n\nconst shouldPluralizeName = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'oneToMany', 'manyWay'].includes(nature) ? 2 : 1;\n\nconst shouldPluralizeTargetAttribute = (nature: Schema.Attribute.RelationKind.Any) =>\n  ['manyToMany', 'manyToOne'].includes(nature) ? 2 : 1;\n\nexport { shouldPluralizeName, shouldPluralizeTargetAttribute };\n", "import { produce } from 'immer';\nimport set from 'lodash/set';\nimport snakeCase from 'lodash/snakeCase';\nimport pluralize from 'pluralize';\n\nimport { getRelationType } from '../../utils/getRelationType';\nimport { nameToSlug } from '../../utils/nameToSlug';\n\nimport * as actions from './constants';\nimport { createComponentUid } from './utils/createUid';\nimport { customFieldDefaultOptionsReducer } from './utils/customFieldDefaultOptionsReducer';\nimport { shouldPluralizeName, shouldPluralizeTargetAttribute } from './utils/relations';\n\nimport type { AnyAction } from '@reduxjs/toolkit';\n\nconst initialState: any = {\n  formErrors: {},\n  modifiedData: {},\n  initialData: {},\n  componentToCreate: {},\n  isCreatingComponentWhileAddingAField: false,\n};\n\nconst reducer = (state = initialState, action: AnyAction) =>\n  // eslint-disable-next-line consistent-return\n  produce(state, (draftState: any) => {\n    switch (action.type) {\n      case actions.ON_CHANGE: {\n        const { keys, value } = action;\n        const obj = state.modifiedData;\n        const hasDefaultValue = Boolean(obj.default);\n\n        // There is no need to remove the default key if the default value isn't defined\n        if (hasDefaultValue && keys.length === 1 && keys.includes('type')) {\n          const previousType = obj.type;\n\n          if (previousType && ['date', 'datetime', 'time'].includes(previousType)) {\n            // return obj.updateIn(keys, () => value).remove('default');\n            delete draftState.modifiedData.default;\n          }\n        }\n\n        set(draftState, ['modifiedData', ...keys], value);\n\n        break;\n      }\n      case actions.ON_CHANGE_RELATION_TARGET: {\n        const {\n          target: {\n            oneThatIsCreatingARelationWithAnother,\n            selectedContentTypeFriendlyName,\n            targetContentTypeAllowedRelations,\n            value,\n          },\n        } = action;\n        // Special case for the admin user...\n        let didChangeRelationTypeBecauseOfRestrictedRelation = false;\n        let changedRelationType = null;\n\n        set(draftState, ['modifiedData', 'target'], value);\n\n        const modifiedData = state.modifiedData;\n\n        // Don't change the relation type if the allowed relations are not restricted\n        // TODO: replace with an obj { relation: 'x', bidirctional: true|false } when BE ready\n        if (Array.isArray(targetContentTypeAllowedRelations)) {\n          const currentRelationType = getRelationType(\n            modifiedData.relation,\n            modifiedData.targetAttribute\n          );\n\n          if (!targetContentTypeAllowedRelations.includes(currentRelationType)) {\n            const relationToSet = targetContentTypeAllowedRelations[0];\n            didChangeRelationTypeBecauseOfRestrictedRelation = true;\n            changedRelationType = relationToSet;\n\n            if (relationToSet === 'oneWay') {\n              set(draftState, ['modifiedData', 'relation'], 'oneToOne');\n            } else if (relationToSet === 'manyWay') {\n              set(draftState, ['modifiedData', 'relation'], 'oneToMany');\n            } else {\n              set(draftState, ['modifiedData', 'relation'], relationToSet);\n            }\n          }\n        }\n\n        let nameToSet;\n\n        if (didChangeRelationTypeBecauseOfRestrictedRelation) {\n          nameToSet = pluralize(\n            snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n            shouldPluralizeName(changedRelationType)\n          );\n        } else {\n          nameToSet = pluralize(\n            snakeCase(nameToSlug(selectedContentTypeFriendlyName)),\n\n            shouldPluralizeName(modifiedData.relation)\n          );\n        }\n\n        set(draftState, ['modifiedData', 'name'], nameToSet);\n\n        const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n        if (currentTargetAttribute === null) {\n          break;\n        }\n\n        // Changing the target and the relation is either oneWay or manyWay\n        // Case when we need to change the relation to oneWay (ex: admin user)\n        if (\n          didChangeRelationTypeBecauseOfRestrictedRelation &&\n          ['oneWay', 'manyWay'].includes(changedRelationType)\n        ) {\n          set(draftState, ['modifiedData', 'targetAttribute'], null);\n\n          break;\n        }\n\n        const targetAttributeToSet = pluralize(\n          snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n          shouldPluralizeTargetAttribute(modifiedData.relation)\n        );\n\n        set(draftState, ['modifiedData', 'targetAttribute'], targetAttributeToSet);\n\n        break;\n      }\n      case actions.ON_CHANGE_RELATION_TYPE: {\n        const {\n          target: { oneThatIsCreatingARelationWithAnother, value },\n        } = action;\n\n        const currentName = state.modifiedData.name;\n\n        // Switching from oneWay\n        if (!['oneWay', 'manyWay'].includes(value)) {\n          set(draftState, ['modifiedData', 'relation'], value);\n          const currentTargetAttribute = state.modifiedData.targetAttribute;\n\n          set(\n            draftState,\n            ['modifiedData', 'name'],\n            pluralize(snakeCase(nameToSlug(currentName)), shouldPluralizeName(value))\n          );\n\n          set(\n            draftState,\n            ['modifiedData', 'targetAttribute'],\n            pluralize(\n              currentTargetAttribute ||\n                snakeCase(nameToSlug(oneThatIsCreatingARelationWithAnother)),\n              shouldPluralizeTargetAttribute(value)\n            )\n          );\n\n          break;\n        }\n\n        if (value === 'oneWay') {\n          set(draftState, ['modifiedData', 'relation'], 'oneToOne');\n          set(draftState, ['modifiedData', 'targetAttribute'], null);\n          set(draftState, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 1));\n\n          break;\n        }\n\n        // manyWay\n        set(draftState, ['modifiedData', 'relation'], 'oneToMany');\n        set(draftState, ['modifiedData', 'targetAttribute'], null);\n        set(draftState, ['modifiedData', 'name'], pluralize(snakeCase(currentName), 2));\n\n        break;\n      }\n\n      case actions.RESET_PROPS:\n        return initialState;\n      case actions.RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO: {\n        // This is run when the user doesn't want to create a new component\n\n        const nextState = {\n          ...initialState,\n          modifiedData: {\n            type: 'component',\n            repeatable: true,\n            ...action.options,\n          },\n        };\n\n        return nextState;\n      }\n      case actions.RESET_PROPS_AND_SAVE_CURRENT_DATA: {\n        // This is run when the user has created a new component\n        const componentToCreate = state.modifiedData.componentToCreate;\n        const modifiedData = {\n          displayName: componentToCreate.displayName,\n          type: 'component',\n          repeatable: false,\n          ...action.options,\n          component: createComponentUid(componentToCreate.displayName, componentToCreate.category),\n        };\n\n        const nextState = {\n          ...initialState,\n          componentToCreate,\n          modifiedData,\n          isCreatingComponentWhileAddingAField: state.modifiedData.createComponent,\n        };\n\n        return nextState;\n      }\n      case actions.RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ: {\n        const createdDZ = state.modifiedData;\n        const dataToSet = {\n          ...createdDZ,\n          createComponent: true,\n          componentToCreate: { type: 'component' },\n        };\n\n        return { ...initialState, modifiedData: dataToSet };\n      }\n      case actions.SET_DATA_TO_EDIT: {\n        draftState.modifiedData = action.data;\n        draftState.initialData = action.data;\n        break;\n      }\n      case actions.SET_ATTRIBUTE_DATA_SCHEMA: {\n        const {\n          attributeType,\n          isEditing,\n          modifiedDataToSetForEditing,\n          nameToSetForRelation,\n          targetUid,\n          step,\n          options = {},\n        } = action;\n\n        if (isEditing) {\n          draftState.modifiedData = modifiedDataToSetForEditing;\n          draftState.initialData = modifiedDataToSetForEditing;\n\n          break;\n        }\n\n        let dataToSet;\n\n        if (attributeType === 'component') {\n          if (step === '1') {\n            dataToSet = {\n              type: 'component',\n              createComponent: true,\n              componentToCreate: { type: 'component' },\n            };\n          } else {\n            dataToSet = {\n              ...options,\n              type: 'component',\n              repeatable: true,\n            };\n          }\n        } else if (attributeType === 'dynamiczone') {\n          dataToSet = {\n            ...options,\n            type: 'dynamiczone',\n            components: [],\n          };\n        } else if (attributeType === 'text') {\n          dataToSet = { ...options, type: 'string' };\n        } else if (attributeType === 'number' || attributeType === 'date') {\n          dataToSet = options;\n        } else if (attributeType === 'media') {\n          dataToSet = {\n            allowedTypes: ['images', 'files', 'videos', 'audios'],\n            type: 'media',\n            multiple: true,\n            ...options,\n          };\n        } else if (attributeType === 'enumeration') {\n          dataToSet = { ...options, type: 'enumeration', enum: [] };\n        } else if (attributeType === 'relation') {\n          dataToSet = {\n            name: snakeCase(nameToSetForRelation),\n            relation: 'oneToOne',\n            targetAttribute: null,\n            target: targetUid,\n            type: 'relation',\n          };\n        } else {\n          dataToSet = { ...options, type: attributeType, default: null };\n        }\n\n        draftState.modifiedData = dataToSet;\n\n        break;\n      }\n      case actions.SET_CUSTOM_FIELD_DATA_SCHEMA: {\n        const { customField, isEditing, modifiedDataToSetForEditing, options = {} } = action;\n\n        if (isEditing) {\n          draftState.modifiedData = modifiedDataToSetForEditing;\n          draftState.initialData = modifiedDataToSetForEditing;\n\n          break;\n        }\n\n        draftState.modifiedData = { ...options, type: customField.type };\n\n        const allOptions = [\n          ...(customField?.options?.base || []),\n          ...(customField?.options?.advanced || []),\n        ];\n\n        const optionDefaults = allOptions.reduce(customFieldDefaultOptionsReducer, []);\n\n        if (optionDefaults.length) {\n          optionDefaults.forEach(({ name, defaultValue }: { name: string; defaultValue: string }) =>\n            set(draftState.modifiedData, name, defaultValue)\n          );\n        }\n\n        break;\n      }\n      case actions.SET_DYNAMIC_ZONE_DATA_SCHEMA: {\n        draftState.modifiedData = action.attributeToEdit;\n        draftState.initialData = action.attributeToEdit;\n        break;\n      }\n      case actions.SET_ERRORS: {\n        draftState.formErrors = action.errors;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\nexport { initialState, reducer };\n", "import { reducer } from './components/DataManagerProvider/reducer';\nimport { reducer as formModalReducer } from './components/FormModal/reducer';\nimport { pluginId } from './pluginId';\n\nexport const reducers = {\n  [`${pluginId}_formModal`]: formModalReducer,\n  [`${pluginId}_dataManagerProvider`]: reducer,\n};\n", "import cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport * as yup from 'yup';\n// TODO V5 Convert any into real types\nexport const formsAPI: any = {\n  components: {\n    inputs: {} as Record<string, any>,\n    add({ id, component }: { id: string; component: any }) {\n      if (!this.inputs[id]) {\n        this.inputs[id] = component;\n      }\n    },\n  },\n  types: {\n    attribute: {\n      // test: {\n      //   validators: [],\n      //   form: {\n      //     advanced: [\n      //       /* cb */\n      //     ],\n      //     base: [\n      //       /* cb */\n      //     ],\n      //   },\n      // },\n    },\n    contentType: {\n      validators: [],\n      form: {\n        advanced: [],\n        base: [],\n      },\n    },\n    component: {\n      validators: [],\n      form: {\n        advanced: [],\n        base: [],\n      },\n    },\n  },\n  contentTypeSchemaMutations: [],\n  addContentTypeSchemaMutation(cb: any) {\n    this.contentTypeSchemaMutations.push(cb);\n  },\n  extendContentType({ validator, form: { advanced, base } }: any) {\n    const { contentType } = this.types;\n\n    contentType.validators.push(validator);\n    contentType.form.advanced.push(advanced);\n    contentType.form.base.push(base);\n  },\n  extendFields(fields: any, { validator, form: { advanced, base } }: any) {\n    const formType = this.types.attribute;\n\n    fields.forEach((field: any) => {\n      if (!formType[field]) {\n        formType[field] = {\n          validators: [],\n          form: {\n            advanced: [\n              /* cb */\n            ],\n            base: [\n              /* cb */\n            ],\n          },\n        };\n      }\n\n      formType[field].validators.push(validator);\n      formType[field].form.advanced.push(advanced);\n      formType[field].form.base.push(base);\n    });\n  },\n\n  getAdvancedForm(target: any, props = null) {\n    const sectionsToAdd = get(this.types, [...target, 'form', 'advanced'], []).reduce(\n      (acc: any, current: any) => {\n        const sections = current(props);\n\n        return [...acc, ...sections];\n      },\n      []\n    );\n\n    return sectionsToAdd;\n  },\n\n  makeCustomFieldValidator(attributeShape: any, validator: any, ...validatorArgs: any) {\n    // When no validator, return the attribute shape\n    if (!validator) return attributeShape;\n\n    // Otherwise extend the shape with the provided validator\n    return attributeShape.shape({ options: yup.object().shape(validator(validatorArgs)) });\n  },\n\n  makeValidator(target: any, initShape: any, ...args: any) {\n    const validators = get(this.types, [...target, 'validators'], []);\n\n    const pluginOptionsShape = validators.reduce((acc: any, current: any) => {\n      const pluginOptionShape = current(args);\n\n      return { ...acc, ...pluginOptionShape };\n    }, {});\n\n    return initShape.shape({ pluginOptions: yup.object().shape(pluginOptionsShape) });\n  },\n  mutateContentTypeSchema(data: Record<string, unknown>, initialData: Record<string, unknown>) {\n    let enhancedData: any = cloneDeep(data);\n\n    const refData: any = cloneDeep(initialData);\n\n    this.contentTypeSchemaMutations.forEach((cb: any) => {\n      enhancedData = cb(enhancedData, refData);\n    });\n\n    return enhancedData;\n  },\n};\n", "type TradOptions = Record<string, string>;\n\nconst prefixPluginTranslations = (trad: TradOptions, pluginId: string): TradOptions => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n    return acc;\n  }, {} as TradOptions);\n};\n\nexport { prefixPluginTranslations };\n", "import * as React from 'react';\n\nimport { Box, Flex, Typography, Link } from '@strapi/design-system';\nimport { Clock, ArrowClockwise } from '@strapi/icons';\nimport { createPortal } from 'react-dom';\nimport { MessageDescriptor, useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\n/**\n * TODO: realistically a lot of this logic is isolated to the `core/admin` package.\n * However, we want to expose the `useAutoReloadOverlayBlocker` hook to the plugins.\n *\n * Therefore, in V5 we should move this logic back to the `core/admin` package & export\n * the hook from that package and re-export here. For now, let's keep it all together\n * because it's easier to diagnose and we're not using a million refs because we don't\n * understand what's going on.\n */\nexport interface AutoReloadOverlayBlockerConfig {\n  title?: string;\n  description?: string;\n  icon?: 'reload' | 'time';\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerContextValue {\n  lockAppWithAutoreload?: (config?: AutoReloadOverlayBlockerConfig) => void;\n  unlockAppWithAutoreload?: () => void;\n}\n\nconst AutoReloadOverlayBlockerContext = React.createContext<AutoReloadOverlayBlockerContextValue>(\n  {}\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AutoReloadOverlayBlockerProviderProps {\n  children: React.ReactNode;\n}\n\nconst MAX_ELAPSED_TIME = 30 * 1000;\n\nconst AutoReloadOverlayBlockerProvider = ({ children }: AutoReloadOverlayBlockerProviderProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [config, setConfig] = React.useState<AutoReloadOverlayBlockerConfig>({});\n  const [failed, setFailed] = React.useState(false);\n\n  const lockAppWithAutoreload = React.useCallback((config: AutoReloadOverlayBlockerConfig = {}) => {\n    setIsOpen(true);\n    setConfig(config);\n  }, []);\n\n  const unlockAppWithAutoreload = React.useCallback(() => {\n    setIsOpen(false);\n    setConfig({});\n  }, []);\n\n  // eslint-disable-next-line consistent-return\n  React.useEffect(() => {\n    if (isOpen) {\n      const timeout = setTimeout(() => {\n        setFailed(true);\n      }, MAX_ELAPSED_TIME);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [isOpen]);\n\n  let displayedIcon = config?.icon || 'reload';\n\n  let description = {\n    id: config?.description || 'components.OverlayBlocker.description',\n    defaultMessage:\n      \"You're using a feature that needs the server to restart. The page will reload automatically.\",\n  };\n\n  let title = {\n    id: config?.title || 'components.OverlayBlocker.title',\n    defaultMessage: 'Waiting for restart',\n  };\n\n  if (failed) {\n    displayedIcon = 'time';\n\n    description = {\n      id: 'components.OverlayBlocker.description.serverError',\n      defaultMessage: 'The server should have restarted, please check your logs in the terminal.',\n    };\n\n    title = {\n      id: 'components.OverlayBlocker.title.serverError',\n      defaultMessage: 'The restart is taking longer than expected',\n    };\n  }\n\n  const autoReloadValue = React.useMemo(\n    () => ({\n      lockAppWithAutoreload,\n      unlockAppWithAutoreload,\n    }),\n    [lockAppWithAutoreload, unlockAppWithAutoreload]\n  );\n\n  return (\n    <AutoReloadOverlayBlockerContext.Provider value={autoReloadValue}>\n      <Blocker\n        displayedIcon={displayedIcon}\n        isOpen={isOpen}\n        description={description}\n        title={title}\n      />\n      {children}\n    </AutoReloadOverlayBlockerContext.Provider>\n  );\n};\n\ninterface BlockerProps {\n  displayedIcon: string;\n  description: MessageDescriptor;\n  isOpen: boolean;\n  title: MessageDescriptor;\n}\n\nconst Blocker = ({ displayedIcon, description, title, isOpen }: BlockerProps) => {\n  const { formatMessage } = useIntl();\n\n  // eslint-disable-next-line no-undef\n  return isOpen && globalThis?.document?.body\n    ? createPortal(\n        <Overlay id=\"autoReloadOverlayBlocker\" direction=\"column\" alignItems=\"center\" gap={6}>\n          <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n            <Typography tag=\"h1\" variant=\"alpha\">\n              {formatMessage(title)}\n            </Typography>\n            <Typography tag=\"h2\" textColor=\"neutral600\" fontSize={4} fontWeight=\"regular\">\n              {formatMessage(description)}\n            </Typography>\n          </Flex>\n          {displayedIcon === 'reload' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <LoaderReload width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          {displayedIcon === 'time' && (\n            <IconBox padding={6} background=\"primary100\" borderColor=\"primary200\">\n              <Clock width=\"4rem\" height=\"4rem\" />\n            </IconBox>\n          )}\n          <Box marginTop={2}>\n            <Link href=\"https://docs.strapi.io\" isExternal>\n              {formatMessage({\n                id: 'global.documentation',\n                defaultMessage: 'Read the documentation',\n              })}\n            </Link>\n          </Box>\n        </Overlay>,\n        // eslint-disable-next-line no-undef\n        globalThis.document.body\n      )\n    : null;\n};\n\nconst rotation = keyframes`\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(359deg);\n    }\n  `;\n\nconst LoaderReload = styled(ArrowClockwise)`\n  animation: ${rotation} 1s infinite linear;\n`;\n\nconst Overlay = styled(Flex)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  /* TODO: set this up in the theme for consistence z-index values */\n  z-index: 1140;\n  padding-top: 16rem;\n\n  & > * {\n    position: relative;\n    z-index: 1;\n  }\n\n  &:before {\n    content: '';\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: ${({ theme }) => theme.colors.neutral0};\n    opacity: 0.9;\n  }\n`;\n\nconst IconBox = styled(Box)`\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  svg {\n    > path {\n      fill: ${({ theme }) => theme.colors.primary600} !important;\n    }\n  }\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Hook\n * -----------------------------------------------------------------------------------------------*/\n\nconst useAutoReloadOverlayBlocker = () => React.useContext(AutoReloadOverlayBlockerContext);\n\nexport { AutoReloadOverlayBlockerProvider, useAutoReloadOverlayBlocker };\n", "import { Layout } from '@strapi/icons';\n\nimport pluginPkg from '../../package.json';\n\nimport { PERMISSIONS } from './constants';\nimport { pluginId } from './pluginId';\nimport { reducers } from './reducers';\nimport { formsAPI } from './utils/formAPI';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nconst name = pluginPkg.strapi.name;\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  register(app: any) {\n    app.addReducers(reducers);\n    app.addMenuLink({\n      to: `plugins/${pluginId}`,\n      icon: Layout,\n      intlLabel: {\n        id: `${pluginId}.plugin.name`,\n        defaultMessage: 'Content Types Builder',\n      },\n      permissions: PERMISSIONS.main,\n      Component: () => import('./pages/App'),\n      position: 5,\n    });\n\n    app.registerPlugin({\n      id: pluginId,\n      name,\n      // Internal APIs exposed by the CTB for the other plugins to use\n      apis: {\n        forms: formsAPI,\n      },\n    });\n  },\n  bootstrap() {},\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n\nexport * from './exports';\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA,wCAAAA,UAAA;AAUA,QAAI,WAAW,IAAI;AAGnB,QAAI,YAAY;AAGhB,QAAI,UAAU;AAGd,QAAI,oBAAoB;AAAxB,QACI,sBAAsB;AAG1B,QAAI,UAAU,MAAM,oBAAoB,sBAAsB;AAM9D,QAAI,cAAc,OAAO,SAAS,GAAG;AAGrC,QAAI,kBAAkB;AAAA;AAAA,MAEpB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAC1E,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAAK,KAAQ;AAAA,MAChD,KAAQ;AAAA,MAAM,KAAQ;AAAA,MAAK,KAAQ;AAAA,MACnC,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA,MAAM,KAAQ;AAAA,MACtB,KAAQ;AAAA;AAAA,MAER,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACvE,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACxD,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACtF,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MAAK,KAAU;AAAA,MACtF,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAAK,KAAU;AAAA,MACzC,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,MAC1B,KAAU;AAAA,MAAM,KAAU;AAAA,IAC5B;AAGA,QAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAGpF,QAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,QAAI,OAAO,cAAc,YAAY,SAAS,aAAa,EAAE;AAS7D,aAAS,eAAe,QAAQ;AAC9B,aAAO,SAAS,KAAK;AACnB,eAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,MAChD;AAAA,IACF;AAUA,QAAI,eAAe,eAAe,eAAe;AAGjD,QAAI,cAAc,OAAO;AAOzB,QAAI,iBAAiB,YAAY;AAGjC,QAAI,SAAS,KAAK;AAGlB,QAAI,cAAc,SAAS,OAAO,YAAY;AAA9C,QACI,iBAAiB,cAAc,YAAY,WAAW;AAU1D,aAAS,aAAa,OAAO;AAE3B,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK,GAAG;AACnB,eAAO,iBAAiB,eAAe,KAAK,KAAK,IAAI;AAAA,MACvD;AACA,UAAI,SAAU,QAAQ;AACtB,aAAQ,UAAU,OAAQ,IAAI,SAAU,CAAC,WAAY,OAAO;AAAA,IAC9D;AA0BA,aAAS,aAAa,OAAO;AAC3B,aAAO,CAAC,CAAC,SAAS,OAAO,SAAS;AAAA,IACpC;AAmBA,aAAS,SAAS,OAAO;AACvB,aAAO,OAAO,SAAS,YACpB,aAAa,KAAK,KAAK,eAAe,KAAK,KAAK,KAAK;AAAA,IAC1D;AAuBA,aAAS,SAAS,OAAO;AACvB,aAAO,SAAS,OAAO,KAAK,aAAa,KAAK;AAAA,IAChD;AAoBA,aAAS,OAAO,QAAQ;AACtB,eAAS,SAAS,MAAM;AACxB,aAAO,UAAU,OAAO,QAAQ,SAAS,YAAY,EAAE,QAAQ,aAAa,EAAE;AAAA,IAChF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChQjB,IAAAC,gCAAA;AAAA,wFAAAC,UAAA;AAAA;AAEA,QAAM,sBAAsB;AAE5B,WAAO,UAAU,YAAU;AAC1B,UAAI,OAAO,WAAW,UAAU;AAC/B,cAAM,IAAI,UAAU,mBAAmB;AAAA,MACxC;AAEA,aAAO,OAAO,QAAQ,qBAAqB,MAAM;AAAA,IAClD;AAAA;AAAA;;;ACVA;AAAA,6DAAAC,UAAA;AAAA;AAEA,WAAO,UAAU;AAAA;AAAA,MAEhcxBA;AAAA,sDAAAC,UAAA;AAAA;AACA,QAAM,SAAS;AACf,QAAM,qBAAqB;AAC3B,QAAM,sBAAsB;AAE5B,QAAM,uBAAuB,CAAC,QAAQ,iBAAiB;AACtD,iBAAW,CAAC,KAAK,KAAK,KAAK,cAAc;AAExC,iBAAS,OAAO,QAAQ,IAAI,OAAO,mBAAmB,GAAG,GAAG,GAAG,GAAG,KAAK;AAAA,MACxE;AAEA,aAAO;AAAA,IACR;AAEA,WAAO,UAAU,CAAC,QAAQ,YAAY;AACrC,UAAI,OAAO,WAAW,UAAU;AAC/B,cAAM,IAAI,UAAU,4BAA4B,OAAO,MAAM,IAAI;AAAA,MAClE;AAEA,gBAAU;AAAA,QACT,oBAAoB,CAAC;AAAA,QACrB,GAAG;AAAA,MACJ;AAEA,YAAM,qBAAqB,IAAI,IAAI;AAAA,QAClC,GAAG;AAAA,QACH,GAAG,QAAQ;AAAA,MACZ,CAAC;AAED,eAAS,OAAO,UAAU;AAC1B,eAAS,qBAAqB,QAAQ,kBAAkB;AACxD,eAAS,OAAO,MAAM;AAEtB,aAAO;AAAA,IACR;AAAA;AAAA;;;AClCA;AAAA,mEAAAC,UAAA;AAAA;AAEA,WAAO,UAAU;AAAA,MAChB,CAAC,KAAK,OAAO;AAAA,MACb,CAAC,MAAM,WAAW;AAAA,MAClB,CAAC,KAAK,QAAQ;AAAA,IACf;AAAA;AAAA;;;ACNA;AAAA,gDAAAC,UAAA;AAAA;AACA,QAAM,qBAAqB;AAC3B,QAAM,gBAAgB;AACtB,QAAM,iCAAiC;AAEvC,QAAM,aAAa,YAAU;AAC5B,aAAO,OAEL,QAAQ,qBAAqB,OAAO,EACpC,QAAQ,0BAA0B,OAAO,EAEzC,QAAQ,qBAAqB,OAAO,EACpC,QAAQ,4BAA4B,OAAO;AAAA,IAC9C;AAEA,QAAM,uBAAuB,CAAC,QAAQ,cAAc;AACnD,YAAM,mBAAmB,mBAAmB,SAAS;AAErD,aAAO,OACL,QAAQ,IAAI,OAAO,GAAG,gBAAgB,QAAQ,GAAG,GAAG,SAAS,EAC7D,QAAQ,IAAI,OAAO,IAAI,gBAAgB,IAAI,gBAAgB,KAAK,GAAG,GAAG,EAAE;AAAA,IAC3E;AAEA,QAAMC,WAAU,CAAC,QAAQ,YAAY;AACpC,UAAI,OAAO,WAAW,UAAU;AAC/B,cAAM,IAAI,UAAU,4BAA4B,OAAO,MAAM,IAAI;AAAA,MAClE;AAEA,gBAAU;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,oBAAoB,CAAC;AAAA,QACrB,2BAA2B;AAAA,QAC3B,GAAG;AAAA,MACJ;AAEA,YAAM,0BAA0B,QAAQ,6BAA6B,OAAO,WAAW,GAAG;AAE1F,YAAM,qBAAqB,IAAI,IAAI;AAAA,QAClC,GAAG;AAAA,QACH,GAAG,QAAQ;AAAA,MACZ,CAAC;AAED,eAAS,cAAc,QAAQ,EAAC,mBAAkB,CAAC;AAEnD,UAAI,QAAQ,YAAY;AACvB,iBAAS,WAAW,MAAM;AAAA,MAC3B;AAEA,UAAI,cAAc;AAElB,UAAI,QAAQ,WAAW;AACtB,iBAAS,OAAO,YAAY;AAC5B,sBAAc;AAAA,MACf;AAEA,eAAS,OAAO,QAAQ,aAAa,QAAQ,SAAS;AACtD,eAAS,OAAO,QAAQ,OAAO,EAAE;AACjC,UAAI,QAAQ,WAAW;AACtB,iBAAS,qBAAqB,QAAQ,QAAQ,SAAS;AAAA,MACxD;AAEA,UAAI,yBAAyB;AAC5B,iBAAS,IAAI,MAAM;AAAA,MACpB;AAEA,aAAO;AAAA,IACR;AAEA,QAAM,UAAU,MAAM;AACrB,YAAM,cAAc,oBAAI,IAAI;AAE5B,YAAM,YAAY,CAAC,QAAQ,YAAY;AACtC,iBAASA,SAAQ,QAAQ,OAAO;AAEhC,YAAI,CAAC,QAAQ;AACZ,iBAAO;AAAA,QACR;AAEA,cAAM,cAAc,OAAO,YAAY;AACvC,cAAM,aAAa,YAAY,IAAI,YAAY,QAAQ,gBAAgB,EAAE,CAAC,KAAK;AAC/E,cAAMC,WAAU,YAAY,IAAI,WAAW;AAC3C,oBAAY,IAAI,aAAa,OAAOA,aAAY,WAAWA,WAAU,IAAI,CAAC;AAC1E,cAAM,aAAa,YAAY,IAAI,WAAW,KAAK;AACnD,YAAI,cAAc,KAAK,aAAa,GAAG;AACtC,mBAAS,GAAG,MAAM,IAAI,UAAU;AAAA,QACjC;AAEA,eAAO;AAAA,MACR;AAEA,gBAAU,QAAQ,MAAM;AACvB,oBAAY,MAAM;AAAA,MACnB;AAEA,aAAO;AAAA,IACR;AAEA,WAAO,UAAUD;AACjB,WAAO,QAAQ,UAAU;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGlB,IAAM,cAAc;;;;;EAKzB,MAAM,CAAC,EAAE,QAAQ,qCAAqC,SAAS,KAAM,CAAA;AACvE;AAEO,IAAM,sBAAsB;ACN5B,IAAM,WAAW,UAAU,KAAK,QAAQ,eAAe,EAAE;ACInD,IAAA,kBAAkB,CAC7B,UACA,oBACG;AACG,QAAA,wBAAwB,oBAAoB,UAAa,oBAAoB;AAE/E,MAAA,aAAa,cAAc,uBAAuB;AAC7C,WAAA;EAAA;AAGL,MAAA,aAAa,eAAe,uBAAuB;AAC9C,WAAA;EAAA;AAGF,SAAA;AACT;ACrBM,IAAA,aAAa,CAAmB,UAAoB,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC;ACArE,IAAM,gBAAgB;AACtB,IAAM,6BACX;AACK,IAAM,wCACX;AACK,IAAM,iCACX;AACK,IAAM,gBAAgB;AACtB,IAAM,0BACX;AACK,IAAM,wBAAwB;AAC9B,IAAM,iBAAiB;AACvB,IAAM,8BACX;AACK,IAAM,qBAAqB;AAC3B,IAAM,gBAAgB;AACtB,IAAM,wCACX;AACK,IAAM,qCACX;AACK,IAAM,eAAe;AACrB,IAAM,oBAAoB;AAC1B,IAAM,gBAAgB;AACtB,IAAM,uBAAuB;AChB9B,IAAA,+BAA+B,CACnC,YACA,sBAC6B;AAC7B,QAAM,gBAA0C,WAAW,OAAO,CAAC,KAAUE,aAAY;AACvF,UAAM,OAAOA,SAAQ;AACrB,QAAI,SAAS,aAAa;AACxB,YAAM,uBAAuBA,SAAQ;AAErC,UAAI,KAAK,oBAAoB;AAE7B,YAAM,iCAA6B,WAAAC;QACjC;QACA,CAAC,sBAAsB,UAAU,YAAY;QAC7C,CAAA;MACF;AAGA,UAAI,KAAK,GAAG,6BAA6B,4BAA4B,iBAAiB,CAAC;IAAA;AAGzF,QAAI,SAAS,eAAe;AAC1B,YAAM,wBAAwBD,SAAQ;AACtC,YAAM,6BAA6B,sBAAsB,OAAO,CAAC,MAAW,eAAe;AACnF,cAAA,iBAAa,WAAAC,SAAI,mBAAmB,CAAC,YAAY,UAAU,YAAY,GAAG,CAAA,CAAE;AAElF,eAAO,CAAC,GAAG,MAAM,GAAG,6BAA6B,YAAY,iBAAiB,CAAC;MACjF,GAAG,CAAA,CAAE;AAEL,aAAO,CAAC,GAAG,KAAK,GAAG,uBAAuB,GAAG,0BAA0B;IAAA;AAGlE,WAAA;EACT,GAAG,CAAA,CAAE;AAEL,SAAO,WAAmC,aAAa;AACzD;ACpBA,IAAMC,iBAAqC;EACzC,YAAY,CAAC;EACb,cAAc,CAAC;EACf,mBAAmB,CAAC;EACpB,qBAAqB,CAAC;EACtB,aAAa,CAAC;EACd,cAAc;IACZ,YAAY,CAAC;IACb,cAAc,CAAA;EAChB;EACA,eAAe,CAAC;EAChB,WAAW;EACX,yBAAyB;AAC3B;AAEA,IAAM,qBAAqB,CAAC,UAAU,SAAS;AAE/C,IAAM,sBAAsB,CAAC,qBAAgE;AAC3F,MAAI,qBAAqB,aAAa;AAC7B,WAAA;EAAA;AAGT,MAAI,qBAAqB,aAAa;AAC7B,WAAA;EAAA;AAGF,SAAA;AACT;AAEA,IAAM,qBAAqB,CAAC,QAAa,oBAA6B;AAC7D,SAAA,OAAO,OAAO,WAAW;IAC9B,CAAC,EAAE,MAAAC,MAAK,MAAwBA,UAAS;EAC3C;AACF;AAEA,IAAMC,YAAU,CAAC,QAAQF,gBAAc,WACrC,kBAAQ,OAAO,CAAC,eAAoB;;AAClC,UAAQ,OAAO,MAAM;IACnB,KAAKG,eAAuB;AACpB,YAAA;QACJ,gBAAgB,EAAE,MAAAF,OAAM,GAAG,KAAK;QAChC;QACA;MAAA,IACE;AACJ,aAAO,KAAK;AAEZ,YAAM,mBAAmB,CAAC,aAAa,aAAa,EAAE,SAAS,SAAS,IACpE,CAAC,SAAS,IACV,CAAC,WAAW,SAAS;AAEzB,YAAM,wBAAoB,WAAAF;QACxB;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;QAC5D,CAAA;MAAA,EACA,MAAM;AAGF,YAAA,oBAAoB,CAAC,GAAG,mBAAmB,EAAE,GAAG,MAAM,MAAAE,MAAAA,CAAM;AAElE,qBAAAG;QACE;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;QAC5D;MACF;AAEA,UAAI,OAAO,0BAA0B;AACnC,cAAM,oBAAoB,KAAK;AACzB,cAAA,iBAAiB,MAAM,WAAW,iBAAiB;AACzD,cAAM,uBAAuB,iDAAgB;AAC7C,cAAM,iCACJ,WAAM,aAAa,eAAnB,mBAAgC,wBAAuB;AAEzD,YAAI,wBAAwB,8BAA8B;AACxD;QAAA;AAIE,YAAA,CAAC,WAAW,aAAa,YAAY;AAC5B,qBAAA,aAAa,aAAa,CAAC;QAAA;AAI7B,mBAAA,aAAa,WAAW,iBAAiB,IAAI;AAExD,cAAM,mBAAmB;UACvB,eAAe,OAAO;UACtB,MAAM;QACR;AAGA,cAAM,sCAAsC,iBAAiB;UAC3D,CAAC,aAAqC;AACpC,uBAAO,WAAAL,SAAI,OAAO,CAAC,gBAAgB,cAAc,QAAQ,CAAC,MAAM;UAAA;QAEpE;AAEoC,4CAAA,QAAQ,CAAC,aAAqC;AAC1E,gBAAA,kBAAc,WAAAA,SAAI,OAAO,CAAC,cAAc,QAAQ,GAAG,CAAA,CAAE;AACrD,gBAAA,cAAc,YAAY,eAAe;AAG/C,cAAI,CAAC,aAAa;AACZ,gBAAA,CAAC,WAAW,aAAa,YAAY;AAC5B,yBAAA,aAAa,aAAa,CAAC;YAAA;AAE7B,uBAAA,aAAa,WAAW,QAAQ,IAAI;UAAA;QACjD,CACD;AAED;MAAA;AAGI,YAAA,8BAA8B,KAAK,SAAS;AAElD,UAAI,6BAA6B;AAC/B,cAAM,SAAS,KAAK;AACd,cAAA,kBAAkB,KAAK,mBAAmB;AAChD,cAAM,WAAW,KAAK;AAChB,cAAA,eAAe,gBAAgB,UAAU,eAAe;AACxD,cAAA,iBAAa,WAAAA,SAAI,OAAO,CAAC,gBAAgB,GAAG,kBAAkB,KAAK,CAAC;AAKxE,YAAA,KAAK,SAAS,cACd,iBAAiB,YACjB,iBAAiB,aACjB,WAAW,YACX;AACA,gBAAM,oBAAoB;YACxB,MAAM;YACN,UAAU,oBAAoB,YAAY;YAC1C;YACA,iBAAiBE;YACjB,MAAM;UACR;AAEA,cAAI,KAAK,SAAS;AAEhB,8BAAkB,UAAU,KAAK;UAAA;AAGnC,gBAAM,kBAAkB,CAAC,GAAG,mBAAmB,iBAAiB;AAEhE,yBAAAG;YACE;YACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;YAC5D;UACF;QAAA;MACF;AAGF;IAAA;IAEF,KAAKC,uCAA+C;AAC5C,YAAA,EAAE,mBAAmB,gBAAA,IAAoB;AAE/C,YAAM,mBAAmB;QACvB,MAAM,aAAa;QACnB;MACF;AAEgB,sBAAA,QAAQ,CAAC,iBAAyC;;AAE9D,YAAA,GAACC,MAAA,WAAW,aAAa,gBAAxB,gBAAAA,IAAqC,OAAO,WAAW,kBAAkB,aAC1E;AACA,qBAAW,aAAa,YAAY,OAAO,WAAW,gBAAgB,EAAE,aAAa,CAAC;QAAA;AAExF,mBAAW,aAAa,YAAY,OAAO,WAAW,gBAAgB,EAAE,WAAW;UACjF;QACF;MAAA,CACD;AAED;IAAA;IAEF,KAAKC,4BAAoC;AACjC,YAAA;QACJ,gBAAgB,EAAE,MAAAN,OAAM,GAAG,KAAK;QAChC;QACA;MAAA,IACE;AAEJ,YAAM,mBAAmB,CAAC,aAAa,aAAa,EAAE,SAAS,SAAS,IACpE,CAAC,SAAS,IACV,CAAC,WAAW,SAAS;AAEzB,YAAM,wBAAoB,WAAAF;QACxB;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;QAC5D,CAAA;MAAA,EACA,MAAM;AAGF,YAAA,oBAAoB,CAAC,GAAG,mBAAmB,EAAE,GAAG,MAAM,MAAAE,MAAAA,CAAM;AAElE,qBAAAG;QACE;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;QAC5D;MACF;AAEA;IAAA;IAEF,KAAKI,gCAAwC;AACrC,YAAA,EAAE,mBAAmB,cAAA,IAAkB;AAE7C,YAAM,mBAAmB;QACvB,MAAM,aAAa;QACnB;MACF;AAEA,YAAM,wBACH,WAAM,aAAa,gBAAnB,mBAAgC,OAAO,WAAW,mBAAmB;AAExE,YAAM,oBAAoB,WAAW,CAAC,GAAG,qBAAqB,GAAG,aAAa,CAAC;AAE/E,QAAC,gBAAW,aAAa,gBAAxB,mBAAqC,OAAO,WAAW,mBAAmB,aACzE;AAGF,YAAM,mBAAmB;QACvB,EAAQ,WAAW,aAAa,YAAY,OAAO,UAAU;QAC7D,MAAM;MACR;AAGA,YAAM,sCAAsC,iBAAiB,OAAO,CAAC,aAAa;AAChF,mBAAO,WAAAT,SAAI,OAAO,CAAC,gBAAgB,cAAc,QAAQ,CAAC,MAAM;MAAA,CACjE;AAEmC,0CAAA,QAAQ,CAAC,aAAqC;AAC1E,cAAA,kBAAc,WAAAA,SAAI,OAAO,CAAC,cAAc,QAAQ,GAAG,CAAA,CAAE;AACrD,cAAA,cAAc,YAAY,eAAe;AAG/C,YAAI,CAAC,aAAa;AACZ,cAAA,CAAC,WAAW,aAAa,YAAY;AAC5B,uBAAA,aAAa,aAAa,CAAC;UAAA;AAE7B,qBAAA,aAAa,WAAW,QAAQ,IAAI;QAAA;MACjD,CACD;AAED;IAAA;IAEF,KAAKU,yBAAiC;AACpC,YAAM,YAAuB;QAC3B,KAAK,OAAO;QACZ,aAAa;QACb,UAAU,OAAO;QACjB,QAAQ;UACN,GAAG,OAAO;UACV,YAAY,CAAA;QAAC;MAEjB;AACW,iBAAA,WAAW,OAAO,GAAa,IAAI;AAE9C,UAAI,OAAO,0BAA0B;AACnC,mBAAW,aAAa,WAAW,OAAO,GAAa,IAAI;MAAA;AAG7D;IAAA;IAEF,KAAKC,eAAuB;AAC1B,YAAM,YAAyB;QAC7B,KAAK,OAAO;QACZ,aAAa;QACb,QAAQ;UACN,GAAG,OAAO;UACV,YAAY,CAAA;QAAC;MAEjB;AAEW,iBAAA,aAAa,OAAO,GAAa,IAAI;AAEhD;IAAA;IAEF,KAAKC,gBAAwB;AACrB,YAAA;QACJ,gBAAgB,EAAE,MAAAV,OAAM,GAAG,KAAK;QAChC;QACA;QACA;MAAA,IACE;AAEJ,YAAM,uBAAuB,iBAAiB;AAC9C,YAAM,mBAAmB,CAAC,aAAa,aAAa,EAAE,SAAS,SAAS,IACpE,CAAC,SAAS,IACV,CAAC,WAAW,SAAS;AAEzB,YAAM,wBAAwB;YAC5B,WAAAF,SAAI,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAChD;MACF;AAEM,YAAA,oBAAoB,KAAK,SAAS;AAExC,UAAI,CAAC,mBAAmB;AACtB,uBAAAK;UACE;UACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,cAAc,qBAAqB;UACnF,OAAO;QACT;AAEA;MAAA;AAGI,YAAA,wBAAqC,WAAAL,SAAI,OAAO;QACpD;QACA,GAAG;QACH;QACA;MACD,CAAA,EAAE,MAAM;AAGT,YAAM,QAAQ;QACZ,MAAAE;QACA,UAAU,KAAK;QACf,QAAQ,KAAK;QACb,iBAAiB,KAAK;QACtB,MAAM;MACR;AAEA,UAAI,KAAK,SAAS;AAChB,cAAM,UAAU,KAAK;MAAA;AAGvB,UAAI,KAAK,eAAe;AACtB,cAAM,gBAAgB,KAAK;MAAA;AAG7B,YAAM,wBAAwB,kBAAkB,UAAU,CAAC,UAAyB;AAClF,eAAO,MAAM,SAAS,UAAa,MAAM,SAAS,iBAAiB;MAAA,CACpE;AAGD,UAAI,0BAA0B,IAAI;AACd,0BAAA,OAAO,uBAAuB,GAAG,KAAK;MAAA;AAG1D,UAAI,gCAA+C;AACnD,UAAI,gCAA+C;AACnD,UAAI,4BAAkD;AACtD,UAAI,2BAA2B;AAEzB,YAAA,iBAAa,WAAAF,SAAI,OAAO,CAAC,gBAAgB,GAAG,kBAAkB,KAAK,CAAC;AACpE,YAAA,0BAA0B,iBAAiB,WAAW,KAAK;AAC3D,YAAA,4BAA4B,KAAK,WAAW;AAClD,YAAM,eAAe,gBAAgB,KAAK,UAAU,KAAK,eAAe;AACxE,YAAM,sBAAsB;QAC1B,iBAAiB;QACjB,iBAAiB;MACnB;AACM,YAAA,sBAAsB,iBAAiB,WAAW;AACxD,YAAM,wBAAwB,wBAAwB;AACtD,YAAM,qDACJ,2BACA,CAAC,6BACD,uBACA;AACI,YAAA,2DACJ,yBACA,uBACA,CAAC,UAAU,SAAS,EAAE,SAAS,YAAa,KAC5C;AACF,YAAM,2DACJ,CAAC,mBAAmB,SAAS,mBAAoB,KACjD,CAAC,mBAAmB,SAAS,YAAa,KAC1C,uBACA,6BACA;AACI,YAAA,2DACJ,mBAAmB,SAAS,mBAAoB,KAChD,CAAC,mBAAmB,SAAS,YAAa,KAC1C,uBACA,6BACA;AACF,YAAM,qDACJ,2BACA,6BACA,CAAC,mBAAmB,SAAS,YAAa;AAG5C,UACE,sDACA,0DACA;AACA,wCAAgC,iBAAiB;MAAA;AAInD,UAAI,+BAA+B;AACjC,cAAM,gBAAgB,kBAAkB;UACtC,CAAC,UAAU,MAAM,SAAS;QAC5B;AAEkB,0BAAA,OAAO,eAAe,CAAC;MAAA;AAI3C,UAAI,CAAC,oDAAoD;AACjD,cAAA,+BAA2B,WAAAA,SAAI,OAAO;UAC1C;UACA,iBAAiB;QAAA,CAClB;AAED,YAAI,0BAA0B;AAC5B,gBAAM,yBAAyB;YAC7B;YACA,iBAAiB;UACnB;AAEA,yCAA2B,WAAAA,SAAI,OAAO;YACpC;YACA,iBAAiB;YACjB;YACA;YACA;UAAA,CACD;QAAA;MACH;AAIF,UACE,4DACA,oDACA;AAC4B,oCAAA;UAC1B,MAAM,KAAK;UACX,UAAU,oBAAoB,YAAY;UAC1C,QAAQ,KAAK;UACb,iBAAiBE;UACjB,MAAM;QACR;AAEA,YAAI,KAAK,SAAS;AAChB,oCAA0B,UAAU,KAAK;QAAA;AAGvC,YAAA,4BAA4B,yBAAyB,eAAe;AACtE,oCAA0B,gBAAgB,yBAAyB;QAAA;AAGrE,cAAM,0BAA0B,kBAAkB;UAChD,CAAC,EAAE,MAAAA,OAAAA,MAAWA,WAAS,iBAAiB;QAC1C;AACA,cAAM,0BAA0B,kBAAkB;UAChD,CAAC,EAAE,MAAM,SAAA,MAAeA,UAAS;QACnC;AAEA,cAAM,iBACH,4BAA4B,KAAK,0BAA0B,2BAC5D;AAEgB,0BAAA,OAAO,eAAe,GAAG,yBAAyB;MAAA;AAGtE,UAAI,0DAA0D;AAC5D,wCAAgC,iBAAiB;AAErB,oCAAA;UAC1B,MAAM,KAAK;UACX,UAAU,oBAAoB,YAAY;UAC1C,QAAQ,KAAK;UACb,iBAAiBA;UACjB,MAAM;QACR;AAEA,YAAI,KAAK,SAAS;AAChB,oCAA0B,UAAU,KAAK;QAAA;AAGvC,YAAA,4BAA4B,yBAAyB,eAAe;AACtE,oCAA0B,gBAAgB,yBAAyB;QAAA;AAGrE,YAAI,+BAA+B;AACjC,gBAAM,gBAAgB,kBAAkB;YACtC,CAAC,EAAE,MAAAA,OAAAA,MAAWA,WAAS;UACzB;AAEkB,4BAAA,OAAO,eAAe,GAAG,yBAAyB;QAAA;MACtE;AAGF,qBAAAG;QACE;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,YAAY;QAC5D;MACF;AAEA;IAAA;IAEF,KAAKQ,6BAAqC;AACxC,YAAM,EAAE,WAAW,WAAW,kBAAkB,eAAmB,IAAA;AAEnE,YAAM,uBAAuB,iBAAiB;AAC9C,YAAM,mBAAmB,CAAC,aAAa,aAAa,EAAE,SAAS,SAAS,IACpE,CAAC,SAAS,IACV,CAAC,WAAW,SAAS;AAEzB,YAAM,wBAAwB;YAC5B,WAAAb,SAAI,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAChD;MACF;AAEA,qBAAAK;QACE;QACA,CAAC,gBAAgB,GAAG,kBAAkB,UAAU,cAAc,qBAAqB;QACnF;MACF;AAEA;IAAA;IAEF,KAAKS,oBAA4B;AAC/B,iBAAW,aAAa,OAAO;AAC/B,iBAAW,oBAAoB,OAAO;AACtC,iBAAW,sBAAsB,OAAO;AACxC,iBAAW,eAAe,OAAO;AACjC,iBAAW,gBAAgB,OAAO;AAClC,iBAAW,YAAY;AACvB;IAAA;IAEF,KAAKC,sBAA8B;AACjC,iBAAW,cAAc,WAAW;AAEpC;IAAA;IAEF,KAAKC,uBAA+B;AAElC,iBAAW,eAAe,MAAM;AAChC,iBAAW,aAAa,MAAM;AAE9B;IAAA;IAEF,KAAKC,eAAuB;AACnB,aAAAhB;IAAA;IAET,KAAKiB,oCAA4C;AAC/C,YAAM,mBAAmB,mBAAmB,MAAM,aAAa,aAAa,OAAO,MAAM;AACzF,iBAAW,aAAa,YAAY,OAAO,WAAW,gBAAgB,EAAE,WAAW;QACjF,OAAO;QACP;MACF;AAEA;IAAA;IAEF,KAAKC,cAAsB;AACnB,YAAA,EAAE,aAAa,sBAAA,IAA0B;AAC/C,YAAM,mBAAmB,CAAC,gBAAgB,aAAa,UAAU,YAAY;AAC7E,YAAM,yBAAyB;QAC7B,MAAM,aAAa,WAAW;QAC9B;MACF;AAEA,YAAM,0BAA0B,CAAC,GAAG,kBAAkB,sBAAsB;AACtE,YAAA,4BAAwB,WAAAnB,SAAI,OAAO,uBAAuB;AAC1D,YAAA,8BAA8B,sBAAsB,SAAS;AAGnE,YAAM,iDAAiD,gBAAgB;AAEvE,UAAI,+BAA+B,gDAAgD;AACjF,cAAM,EAAE,QAAQ,UAAU,gBAAoB,IAAA;AACxC,cAAA,eAAe,gBAAgB,UAAU,eAAe;AAExD,cAAA,OAAM,WAAM,aAAa,gBAAnB,mBAAgC;AAC5C,cAAM,gCACJ,WAAW,OAAO,CAAC,mBAAmB,SAAS,YAAa;AAE9D,YAAI,+BAA+B;AACjC,gBAAM,cACJ,WAAM,aAAa,WAAW,MAA9B,mBAAiC,OAAO,WAAW;AACrD,gBAAM,iBAAiB,WAAW,OAAO,CAAC,cAAc;AAClD,gBAAA,UAAU,SAAS,uBAAuB;AACrC,qBAAA;YAAA;AAGT,gBAAI,UAAU,WAAW,OAAO,UAAU,oBAAoB,uBAAuB;AAC5E,qBAAA;YAAA;AAGF,mBAAA;UAAA,CACR;AAED,qBAAW,aAAa,WAAW,EAAE,OAAO,aAAa;AAEzD;QAAA;MACF;AAKF,YAAM,oBAA8B,MAAM,aACxC,WACF,EAAG,OAAO,WAAW,MAAA,EAAQ,OAAO,CAAC,KAAeD,aAA2B;AACzEA,YAAAA,SAAQ,SAAS,OAAO;AACnB,iBAAA;QAAA;AAGLA,YAAAA,SAAQ,gBAAgB,uBAAuB;AAC1C,iBAAA;QAAA;AAGL,YAAA,KAAKA,SAAQ,IAAc;AAExB,eAAA;MACT,GAAG,CAAA,CAAE;AAEa,wBAAA,QAAQ,CAAC,cAAc;;AACvC,cAAM,aAAa,mBAAmB,MAAM,aAAa,WAAW,GAAG,SAAS;AAEhF,SAAAQ,MAAO,WAAW,aAAa,WAAW,MAA1C,qBAAAA,IAA6C,OAAO,WAAW,YAAY;MAAA,CAC5E;AAED,uBAAW,aAAa,WAAW,MAAnC,mBAAsC,OAAO,WAAW,OAAO,wBAAwB;AAEvF;IAAA;IAEF,KAAKa,uCAA+C;AAC5C,YAAA,EAAE,uBAAuB,aAAA,IAAiB;AAEhD,YAAM,yBAAyB;SAC7B,WAAM,aAAa,eAAnB,mBAAgC;QAChC;MACF;AAEA,yCAAW,aAAa,eAAxB,mBAAqC,kBAArC,mBAAoD,WAApD,mBAA4D,eAA5D,mBAAwE;QACtE;QACA;;AAGF;IAAA;IAEF,KAAKC,mBAA2B;AAC9B,iBAAW,0BAA0B;AACrC,iBAAW,cAAc,OAAO;AAChC,iBAAW,eAAe,OAAO;AAI7B,UAAA,CAAC,OAAO,sBAAsB;AAChC,mBAAW,aAAa,MAAM;AAC9B,mBAAW,eAAe,MAAM;MAAA;AAGlC;IAAA;IAEF,KAAKC,eAAuB;AACpB,YAAA;QACJ,MAAM,EAAE,aAAa,UAAU,MAAM,KAAK;QAC1C;QACA;MAAA,IACE;AAEJ,iBAAW,aAAa,UAAU,EAAE,OAAO,cAAc;AAErD,UAAA,OAAO,eAAe,aAAa;AAC1B,mBAAA,aAAa,UAAU,WAAW;AAClC,mBAAA,aAAa,UAAU,OAAO,OAAO;AAChD,cAAM,iBAAiB,EAAQ,WAAW,aAAa,SAAS;AACrD,mBAAA,WAAW,GAAa,IAAI;AAEvC;MAAA;AAGS,iBAAA,aAAa,YAAY,OAAO,OAAO;AAElD;IAAA;IAEF;AACS,aAAA;EAAA;AAEb,CAAC;ACtrBU,IAAA,aAAa,CAACpB,cAAiB,eAAAqB,SAAQrB,OAAM,EAAE,WAAW,IAAK,CAAA;ACFrE,IAAM,YAAY;AAClB,IAAM,4BAA4B;AAClC,IAAM,0BAA0B;AAChC,IAAM,cAAc;AACpB,IAAM,wDACX;AACK,IAAM,oCACX;AACK,IAAM,0DACX;AACK,IAAM,mBAAmB;AACzB,IAAM,4BAA4B;AAClC,IAAM,+BACX;AACK,IAAM,+BACX;AACK,IAAM,aAAa;ACZpB,IAAA,YAAY,CAACA,UAA2C;AACtD,QAAA,YAAY,WAAWA,KAAI;AAC1B,SAAA,QAAQ,SAAS,IAAI,SAAS;AACvC;AAGM,IAAA,qBAAqB,CAACA,OAAc,aAA6C;AACrF,SAAO,GAAG,WAAW,QAAQ,CAAC,IAAI,WAAWA,KAAI,CAAC;AACpD;ACZa,IAAA,mCAAmC,CAAC,KAAU,WAAgB;AACzE,MAAI,OAAO,OAAO;AAChB,WAAO,OAAO,MAAM,OAAO,kCAAkC,GAAG;EAAA;AAGlE,MAAI,kBAAkB,QAAQ;AACtB,UAAA,EAAE,MAAAA,OAAM,aAAA,IAAiB;AAC/B,QAAI,KAAK,EAAE,MAAAA,OAAM,aAAA,CAAc;EAAA;AAG1B,SAAA;AACT;ACPA,IAAM,sBAAsB,CAAC,WAC3B,CAAC,cAAc,aAAa,SAAS,EAAE,SAAS,MAAM,IAAI,IAAI;AAEhE,IAAM,iCAAiC,CAAC,WACtC,CAAC,cAAc,WAAW,EAAE,SAAS,MAAM,IAAI,IAAI;ACOrD,IAAM,eAAoB;EACxB,YAAY,CAAC;EACb,cAAc,CAAC;EACf,aAAa,CAAC;EACd,mBAAmB,CAAC;EACpB,sCAAsC;AACxC;AAEA,IAAM,UAAU,CAAC,QAAQ,cAAc;;EAErCsB,GAAQ,OAAO,CAAC,eAAoB;;AAClC,YAAQ,OAAO,MAAM;MACnB,KAAKC,WAAmB;AAChB,cAAA,EAAE,MAAM,MAAA,IAAU;AACxB,cAAM,MAAM,MAAM;AACZ,cAAA,kBAAkB,QAAQ,IAAI,OAAO;AAG3C,YAAI,mBAAmB,KAAK,WAAW,KAAK,KAAK,SAAS,MAAM,GAAG;AACjE,gBAAM,eAAe,IAAI;AAErB,cAAA,gBAAgB,CAAC,QAAQ,YAAY,MAAM,EAAE,SAAS,YAAY,GAAG;AAEvE,mBAAO,WAAW,aAAa;UAAA;QACjC;AAGF,uBAAApB,SAAI,YAAY,CAAC,gBAAgB,GAAG,IAAI,GAAG,KAAK;AAEhD;MAAA;MAEF,KAAKqB,2BAAmC;AAChC,cAAA;UACJ,QAAQ;YACN;YACA;YACA;YACA;UAAA;QACF,IACE;AAEJ,YAAI,mDAAmD;AACvD,YAAI,sBAAsB;AAE1B,uBAAArB,SAAI,YAAY,CAAC,gBAAgB,QAAQ,GAAG,KAAK;AAEjD,cAAM,eAAe,MAAM;AAIvB,YAAA,MAAM,QAAQ,iCAAiC,GAAG;AACpD,gBAAM,sBAAsB;YAC1B,aAAa;YACb,aAAa;UACf;AAEA,cAAI,CAAC,kCAAkC,SAAS,mBAAmB,GAAG;AAC9D,kBAAA,gBAAgB,kCAAkC,CAAC;AACN,+DAAA;AAC7B,kCAAA;AAEtB,gBAAI,kBAAkB,UAAU;AAC9B,6BAAAA,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,UAAU;YAAA,WAC/C,kBAAkB,WAAW;AACtC,6BAAAA,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,WAAW;YAAA,OACpD;AACL,6BAAAA,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,aAAa;YAAA;UAC7D;QACF;AAGE,YAAA;AAEJ,YAAI,kDAAkD;AACxC,0BAAA,iBAAAsB;gBACV,iBAAAC,SAAU,WAAW,+BAA+B,CAAC;YACrD,oBAAoB,mBAAmB;UACzC;QAAA,OACK;AACO,0BAAA,iBAAAD;gBACV,iBAAAC,SAAU,WAAW,+BAA+B,CAAC;YAErD,oBAAoB,aAAa,QAAQ;UAC3C;QAAA;AAGF,uBAAAvB,SAAI,YAAY,CAAC,gBAAgB,MAAM,GAAG,SAAS;AAE7C,cAAA,yBAAyB,MAAM,aAAa;AAElD,YAAI,2BAA2B,MAAM;AACnC;QAAA;AAKF,YACE,oDACA,CAAC,UAAU,SAAS,EAAE,SAAS,mBAAmB,GAClD;AACA,yBAAAA,SAAI,YAAY,CAAC,gBAAgB,iBAAiB,GAAG,IAAI;AAEzD;QAAA;AAGF,cAAM,2BAAuB,iBAAAsB;cAC3B,iBAAAC,SAAU,WAAW,qCAAqC,CAAC;UAC3D,+BAA+B,aAAa,QAAQ;QACtD;AAEA,uBAAAvB,SAAI,YAAY,CAAC,gBAAgB,iBAAiB,GAAG,oBAAoB;AAEzE;MAAA;MAEF,KAAKwB,yBAAiC;AAC9B,cAAA;UACJ,QAAQ,EAAE,uCAAuC,MAAM;QAAA,IACrD;AAEE,cAAA,cAAc,MAAM,aAAa;AAGvC,YAAI,CAAC,CAAC,UAAU,SAAS,EAAE,SAAS,KAAK,GAAG;AAC1C,yBAAAxB,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,KAAK;AAC7C,gBAAA,yBAAyB,MAAM,aAAa;AAElD,yBAAAA;YACE;YACA,CAAC,gBAAgB,MAAM;gBACvB,iBAAAsB,aAAU,iBAAAC,SAAU,WAAW,WAAW,CAAC,GAAG,oBAAoB,KAAK,CAAC;UAC1E;AAEA,yBAAAvB;YACE;YACA,CAAC,gBAAgB,iBAAiB;gBAClC,iBAAAsB;cACE,8BACE,iBAAAC,SAAU,WAAW,qCAAqC,CAAC;cAC7D,+BAA+B,KAAK;YAAA;UAExC;AAEA;QAAA;AAGF,YAAI,UAAU,UAAU;AACtB,yBAAAvB,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,UAAU;AACxD,yBAAAA,SAAI,YAAY,CAAC,gBAAgB,iBAAiB,GAAG,IAAI;AACrD,yBAAAA,SAAA,YAAY,CAAC,gBAAgB,MAAM,OAAG,iBAAAsB,aAAU,iBAAAC,SAAU,WAAW,GAAG,CAAC,CAAC;AAE9E;QAAA;AAIF,uBAAAvB,SAAI,YAAY,CAAC,gBAAgB,UAAU,GAAG,WAAW;AACzD,uBAAAA,SAAI,YAAY,CAAC,gBAAgB,iBAAiB,GAAG,IAAI;AACrD,uBAAAA,SAAA,YAAY,CAAC,gBAAgB,MAAM,OAAG,iBAAAsB,aAAU,iBAAAC,SAAU,WAAW,GAAG,CAAC,CAAC;AAE9E;MAAA;MAGF,KAAKE;AACI,eAAA;MACT,KAAKC,uDAA+D;AAGlE,cAAM,YAAY;UAChB,GAAG;UACH,cAAc;YACZ,MAAM;YACN,YAAY;YACZ,GAAG,OAAO;UAAA;QAEd;AAEO,eAAA;MAAA;MAET,KAAKC,mCAA2C;AAExC,cAAA,oBAAoB,MAAM,aAAa;AAC7C,cAAM,eAAe;UACnB,aAAa,kBAAkB;UAC/B,MAAM;UACN,YAAY;UACZ,GAAG,OAAO;UACV,WAAW,mBAAmB,kBAAkB,aAAa,kBAAkB,QAAQ;QACzF;AAEA,cAAM,YAAY;UAChB,GAAG;UACH;UACA;UACA,sCAAsC,MAAM,aAAa;QAC3D;AAEO,eAAA;MAAA;MAET,KAAKC,yDAAiE;AACpE,cAAM,YAAY,MAAM;AACxB,cAAM,YAAY;UAChB,GAAG;UACH,iBAAiB;UACjB,mBAAmB,EAAE,MAAM,YAAY;QACzC;AAEA,eAAO,EAAE,GAAG,cAAc,cAAc,UAAU;MAAA;MAEpD,KAAKC,kBAA0B;AAC7B,mBAAW,eAAe,OAAO;AACjC,mBAAW,cAAc,OAAO;AAChC;MAAA;MAEF,KAAKC,2BAAmC;AAChC,cAAA;UACJ;UACA;UACA;UACA;UACA;UACA;UACA,UAAU,CAAA;QAAC,IACT;AAEJ,YAAI,WAAW;AACb,qBAAW,eAAe;AAC1B,qBAAW,cAAc;AAEzB;QAAA;AAGE,YAAA;AAEJ,YAAI,kBAAkB,aAAa;AACjC,cAAI,SAAS,KAAK;AACJ,wBAAA;cACV,MAAM;cACN,iBAAiB;cACjB,mBAAmB,EAAE,MAAM,YAAY;YACzC;UAAA,OACK;AACO,wBAAA;cACV,GAAG;cACH,MAAM;cACN,YAAY;YACd;UAAA;QACF,WACS,kBAAkB,eAAe;AAC9B,sBAAA;YACV,GAAG;YACH,MAAM;YACN,YAAY,CAAA;UACd;QAAA,WACS,kBAAkB,QAAQ;AACnC,sBAAY,EAAE,GAAG,SAAS,MAAM,SAAS;QAChC,WAAA,kBAAkB,YAAY,kBAAkB,QAAQ;AACrD,sBAAA;QAAA,WACH,kBAAkB,SAAS;AACxB,sBAAA;YACV,cAAc,CAAC,UAAU,SAAS,UAAU,QAAQ;YACpD,MAAM;YACN,UAAU;YACV,GAAG;UACL;QAAA,WACS,kBAAkB,eAAe;AAC1C,sBAAY,EAAE,GAAG,SAAS,MAAM,eAAe,MAAM,CAAA,EAAG;QAAA,WAC/C,kBAAkB,YAAY;AAC3B,sBAAA;YACV,UAAM,iBAAAP,SAAU,oBAAoB;YACpC,UAAU;YACV,iBAAiB;YACjB,QAAQ;YACR,MAAM;UACR;QAAA,OACK;AACL,sBAAY,EAAE,GAAG,SAAS,MAAM,eAAe,SAAS,KAAK;QAAA;AAG/D,mBAAW,eAAe;AAE1B;MAAA;MAEF,KAAKQ,8BAAsC;AACzC,cAAM,EAAE,aAAa,WAAW,6BAA6B,UAAU,CAAA,EAAA,IAAO;AAE9E,YAAI,WAAW;AACb,qBAAW,eAAe;AAC1B,qBAAW,cAAc;AAEzB;QAAA;AAGF,mBAAW,eAAe,EAAE,GAAG,SAAS,MAAM,YAAY,KAAK;AAE/D,cAAM,aAAa;UACjB,KAAI,gDAAa,YAAb,mBAAsB,SAAQ,CAAC;UACnC,KAAI,gDAAa,YAAb,mBAAsB,aAAY,CAAA;QACxC;AAEA,cAAM,iBAAiB,WAAW,OAAO,kCAAkC,CAAA,CAAE;AAE7E,YAAI,eAAe,QAAQ;AACV,yBAAA;YAAQ,CAAC,EAAE,MAAAlC,OAAM,aAAA,UAC9B,WAAAG,SAAI,WAAW,cAAcH,OAAM,YAAY;UACjD;QAAA;AAGF;MAAA;MAEF,KAAKmC,8BAAsC;AACzC,mBAAW,eAAe,OAAO;AACjC,mBAAW,cAAc,OAAO;AAChC;MAAA;MAEF,KAAKC,YAAoB;AACvB,mBAAW,aAAa,OAAO;AAC/B;MAAA;MAEF;AACS,eAAA;IAAA;EAEZ,CAAA;;AC3UI,IAAM,WAAW;EACtB,CAAC,GAAG,QAAQ,YAAY,GAAGC;EAC3B,CAAC,GAAG,QAAQ,sBAAsB,GAAGpC;AACvC;ACHO,IAAM,WAAgB;EAC3B,YAAY;IACV,QAAQ,CAAC;IACT,IAAI,EAAE,IAAI,UAAA,GAA6C;AACrD,UAAI,CAAC,KAAK,OAAO,EAAE,GAAG;AACf,aAAA,OAAO,EAAE,IAAI;MAAA;IACpB;EAEJ;EACA,OAAO;IACL,WAAW;;;;;;;;;;;;IAYX;IACA,aAAa;MACX,YAAY,CAAC;MACb,MAAM;QACJ,UAAU,CAAC;QACX,MAAM,CAAA;MAAC;IAEX;IACA,WAAW;MACT,YAAY,CAAC;MACb,MAAM;QACJ,UAAU,CAAC;QACX,MAAM,CAAA;MAAC;IACT;EAEJ;EACA,4BAA4B,CAAC;EAC7B,6BAA6B,IAAS;AAC/B,SAAA,2BAA2B,KAAK,EAAE;EACzC;EACA,kBAAkB,EAAE,WAAW,MAAM,EAAE,UAAU,KAAA,EAAA,GAAe;AACxD,UAAA,EAAE,YAAA,IAAgB,KAAK;AAEjB,gBAAA,WAAW,KAAK,SAAS;AACzB,gBAAA,KAAK,SAAS,KAAK,QAAQ;AAC3B,gBAAA,KAAK,KAAK,KAAK,IAAI;EACjC;EACA,aAAa,QAAa,EAAE,WAAW,MAAM,EAAE,UAAU,KAAK,EAAA,GAAU;AAChE,UAAA,WAAW,KAAK,MAAM;AAErB,WAAA,QAAQ,CAAC,UAAe;AACzB,UAAA,CAAC,SAAS,KAAK,GAAG;AACpB,iBAAS,KAAK,IAAI;UAChB,YAAY,CAAC;UACb,MAAM;YACJ,UAAU;;YAEV;YACA,MAAM;;YAAA;UAEN;QAEJ;MAAA;AAGF,eAAS,KAAK,EAAE,WAAW,KAAK,SAAS;AACzC,eAAS,KAAK,EAAE,KAAK,SAAS,KAAK,QAAQ;AAC3C,eAAS,KAAK,EAAE,KAAK,KAAK,KAAK,IAAI;IAAA,CACpC;EACH;EAEA,gBAAgB,QAAa,QAAQ,MAAM;AACzC,UAAM,oBAAgB,WAAAH,SAAI,KAAK,OAAO,CAAC,GAAG,QAAQ,QAAQ,UAAU,GAAG,CAAA,CAAE,EAAE;MACzE,CAAC,KAAUD,aAAiB;AACpB,cAAA,WAAWA,SAAQ,KAAK;AAE9B,eAAO,CAAC,GAAG,KAAK,GAAG,QAAQ;MAC7B;MACA,CAAA;IACF;AAEO,WAAA;EACT;EAEA,yBAAyB,gBAAqB,cAAmB,eAAoB;AAE/E,QAAA,CAAC;AAAkB,aAAA;AAGvB,WAAO,eAAe,MAAM,EAAE,SAAa,OAAS,EAAA,MAAM,UAAU,aAAa,CAAC,EAAA,CAAG;EACvF;EAEA,cAAc,QAAa,cAAmB,MAAW;AACjD,UAAA,iBAAa,WAAAC,SAAI,KAAK,OAAO,CAAC,GAAG,QAAQ,YAAY,GAAG,CAAA,CAAE;AAEhE,UAAM,qBAAqB,WAAW,OAAO,CAAC,KAAUD,aAAiB;AACjE,YAAA,oBAAoBA,SAAQ,IAAI;AAEtC,aAAO,EAAE,GAAG,KAAK,GAAG,kBAAkB;IACxC,GAAG,CAAA,CAAE;AAEE,WAAA,UAAU,MAAM,EAAE,eAAmB,OAAA,EAAS,MAAM,kBAAkB,EAAA,CAAG;EAClF;EACA,wBAAwB,MAA+B,aAAsC;AACvF,QAAA,mBAAoB,iBAAAyC,SAAU,IAAI;AAEhC,UAAA,cAAe,iBAAAA,SAAU,WAAW;AAErC,SAAA,2BAA2B,QAAQ,CAAC,OAAY;AACpC,qBAAA,GAAG,cAAc,OAAO;IAAA,CACxC;AAEM,WAAA;EAAA;AAEX;ACtHA,IAAM,2BAA2B,CAAC,MAAmBC,cAAkC;AACrF,MAAI,CAACA,WAAU;AACP,UAAA,IAAI,UAAU,yBAAyB;EAAA;AAE/C,SAAO,OAAO,KAAK,IAAI,EAAE,OAAO,CAAC,KAAK1C,aAAY;AAChD,QAAI,GAAG0C,SAAQ,IAAI1C,QAAO,EAAE,IAAI,KAAKA,QAAO;AACrC,WAAA;EACT,GAAG,CAAA,CAAiB;AACtB;ACsBA,IAAM,kCAAwC;EAC5C,CAAA;AACF;AAUA,IAAM,mBAAmB,KAAK;AAE9B,IAAM,mCAAmC,CAAC,EAAE,SAAA,MAAsD;AAChG,QAAM,CAAC,QAAQ,SAAS,IAAU,eAAS,KAAK;AAChD,QAAM,CAAC,QAAQ,SAAS,IAAU,eAAyC,CAAA,CAAE;AAC7E,QAAM,CAAC,QAAQ,SAAS,IAAU,eAAS,KAAK;AAEhD,QAAM,wBAA8B,kBAAY,CAAC2C,UAAyC,CAAA,MAAO;AAC/F,cAAU,IAAI;AACd,cAAUA,OAAM;EAClB,GAAG,CAAA,CAAE;AAEC,QAAA,0BAAgC,kBAAY,MAAM;AACtD,cAAU,KAAK;AACf,cAAU,CAAA,CAAE;EACd,GAAG,CAAA,CAAE;AAGL,EAAM,gBAAU,MAAM;AACpB,QAAI,QAAQ;AACJ,YAAA,UAAU,WAAW,MAAM;AAC/B,kBAAU,IAAI;MAAA,GACb,gBAAgB;AAEnB,aAAO,MAAM;AACX,qBAAa,OAAO;MACtB;IAAA;EACF,GACC,CAAC,MAAM,CAAC;AAEP,MAAA,iBAAgB,iCAAQ,SAAQ;AAEpC,MAAIC,eAAc;IAChB,KAAI,iCAAQ,gBAAe;IAC3B,gBACE;EACJ;AAEA,MAAI,QAAQ;IACV,KAAI,iCAAQ,UAAS;IACrB,gBAAgB;EAClB;AAEA,MAAI,QAAQ;AACM,oBAAA;AAEFA,mBAAA;MACZ,IAAI;MACJ,gBAAgB;IAClB;AAEQ,YAAA;MACN,IAAI;MACJ,gBAAgB;IAClB;EAAA;AAGF,QAAM,kBAAwB;IAC5B,OAAO;MACL;MACA;IAAA;IAEF,CAAC,uBAAuB,uBAAuB;EACjD;AAEA,aACG,yBAAA,gCAAgC,UAAhC,EAAyC,OAAO,iBAC/C,UAAA;QAAA;MAAC;MAAA;QACC;QACA;QACA,aAAAA;QACA;MAAA;IACF;IACC;EAAA,EAAA,CACH;AAEJ;AASA,IAAM,UAAU,CAAC,EAAE,eAAe,aAAAA,cAAa,OAAO,OAAA,MAA2B;;AACzE,QAAA,EAAE,cAAc,IAAI,QAAQ;AAG3B,SAAA,YAAU,8CAAY,aAAZ,mBAAsB,YACnC;QACE,yBAAC,SAAA,EAAQ,IAAG,4BAA2B,WAAU,UAAS,YAAW,UAAS,KAAK,GACjF,UAAA;UAAA,yBAAC,MAAA,EAAK,WAAU,UAAS,YAAW,UAAS,KAAK,GAChD,UAAA;YAAA,wBAAC,YAAA,EAAW,KAAI,MAAK,SAAQ,SAC1B,UAAA,cAAc,KAAK,EAAA,CACtB;YACC,wBAAA,YAAA,EAAW,KAAI,MAAK,WAAU,cAAa,UAAU,GAAG,YAAW,WACjE,UAAc,cAAAA,YAAW,EAC5B,CAAA;MAAA,EAAA,CACF;MACC,kBAAkB,gBACjB,wBAAC,SAAQ,EAAA,SAAS,GAAG,YAAW,cAAa,aAAY,cACvD,cAAA,wBAAC,cAAa,EAAA,OAAM,QAAO,QAAO,OAAO,CAAA,EAAA,CAC3C;MAED,kBAAkB,cACjB,wBAAC,SAAQ,EAAA,SAAS,GAAG,YAAW,cAAa,aAAY,cACvD,cAAA,wBAAC,eAAM,EAAA,OAAM,QAAO,QAAO,OAAO,CAAA,EAAA,CACpC;UAEF,wBAAC,KAAI,EAAA,WAAW,GACd,cAAA,wBAAC,MAAA,EAAK,MAAK,0BAAyB,YAAU,MAC3C,UAAc,cAAA;QACb,IAAI;QACJ,gBAAgB;MACjB,CAAA,EACH,CAAA,EACF,CAAA;IAAA,EAAA,CACF;;IAEA,WAAW,SAAS;EAAA,IAEtB;AACN;AAEA,IAAM,WAAW;;;;;;;;AASjB,IAAM,eAAe,GAAO,aAAc;eAC3B,QAAQ;;AAGvB,IAAM,UAAU,GAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;kBAsBT,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,QAAQ;;;;AAKtD,IAAM,UAAU,GAAO,GAAG;;;;;;;cAOZ,CAAC,EAAE,MAAA,MAAY,MAAM,OAAO,UAAU;;;;AASpD,IAAM,8BAA8B,MAAY,iBAAW,+BAA+B;ACvN1F,IAAM,OAAO,UAAU,OAAO;AAG9B,IAAe,QAAA;EACb,SAAS,KAAU;AACjB,QAAI,YAAY,QAAQ;AACxB,QAAI,YAAY;MACd,IAAI,WAAW,QAAQ;MACvB,MAAM;MACN,WAAW;QACT,IAAI,GAAG,QAAQ;QACf,gBAAgB;MAClB;MACA,aAAa,YAAY;MACzB,WAAW,MAAM,OAAO,8BAAa,EAAA,KAAA,CAAA,MAAA,EAAA,CAAA;MACrC,UAAU;IAAA,CACX;AAED,QAAI,eAAe;MACjB,IAAI;MACJ;;MAEA,MAAM;QACJ,OAAO;MAAA;IACT,CACD;EACH;EACA,YAAY;EAAC;EACb,MAAM,cAAc,EAAE,QAAA,GAAkC;AAChD,UAAA,gBAAgB,MAAM,QAAQ;MAClC,QAAQ,IAAI,CAAC,WAAW;AACf,eAAA,qCAA+B,OAAA,OAAA,EAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,6BAAA,MAAA,OAAA,8BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,+BAAA,MAAA,OAAA,gCAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,EAAA,CAAA,GAAA,kBAAA,MAAA,SAAA,CAAA,EACnC,KAAK,CAAC,EAAE,SAAS,KAAA,MAAW;AACpB,iBAAA;YACL,MAAM,yBAAyB,MAAM,QAAQ;YAC7C;UACF;QAAA,CACD,EACA,MAAM,MAAM;AACJ,iBAAA;YACL,MAAM,CAAC;YACP;UACF;QAAA,CACD;MACJ,CAAA;IACH;AAEO,WAAA,QAAQ,QAAQ,aAAa;EAAA;AAExC;",
  "names": ["exports", "require_escape_string_regexp", "exports", "exports", "exports", "exports", "exports", "slugify", "counter", "current", "get", "initialState", "name", "reducer", "actions.ADD_ATTRIBUTE", "set", "actions.ADD_CREATED_COMPONENT_TO_DYNAMIC_ZONE", "_a", "actions.ADD_CUSTOM_FIELD_ATTRIBUTE", "actions.CHANGE_DYNAMIC_ZONE_COMPONENTS", "actions.CREATE_COMPONENT_SCHEMA", "actions.CREATE_SCHEMA", "actions.EDIT_ATTRIBUTE", "actions.EDIT_CUSTOM_FIELD_ATTRIBUTE", "actions.GET_DATA_SUCCEEDED", "actions.UPDATE_INITIAL_STATE", "actions.DELETE_NOT_SAVED_TYPE", "actions.RELOAD_PLUGIN", "actions.REMOVE_COMPONENT_FROM_DYNAMIC_ZONE", "actions.REMOVE_FIELD", "actions.REMOVE_FIELD_FROM_DISPLAYED_COMPONENT", "actions.SET_MODIFIED_DATA", "actions.UPDATE_SCHEMA", "slugify", "produce", "actions.ON_CHANGE", "actions.ON_CHANGE_RELATION_TARGET", "pluralize", "snakeCase", "actions.ON_CHANGE_RELATION_TYPE", "actions.RESET_PROPS", "actions.RESET_PROPS_AND_SET_FORM_FOR_ADDING_AN_EXISTING_COMPO", "actions.RESET_PROPS_AND_SAVE_CURRENT_DATA", "actions.RESET_PROPS_AND_SET_THE_FORM_FOR_ADDING_A_COMPO_TO_A_DZ", "actions.SET_DATA_TO_EDIT", "actions.SET_ATTRIBUTE_DATA_SCHEMA", "actions.SET_CUSTOM_FIELD_DATA_SCHEMA", "actions.SET_DYNAMIC_ZONE_DATA_SCHEMA", "actions.SET_ERRORS", "formModalReducer", "cloneDeep", "pluginId", "config", "description"]
}
