{
  "version": 3,
  "sources": ["../../../@strapi/admin/admin/src/pages/Settings/pages/Users/components/MagicLinkWrapper.tsx", "../../../@strapi/admin/admin/src/pages/Settings/pages/Users/components/MagicLinkCE.tsx", "../../../@strapi/admin/admin/src/pages/Settings/pages/Users/components/SelectRoles.tsx"],
  "sourcesContent": ["import { IconButton } from '@strapi/design-system';\nimport { Duplicate } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { ContentBox } from '../../../../../components/ContentBox';\nimport { useNotification } from '../../../../../features/Notifications';\nimport { useClipboard } from '../../../../../hooks/useClipboard';\n\ninterface MagicLinkWrapperProps {\n  children: string;\n  target: string;\n}\n\nconst MagicLinkWrapper = ({ children, target }: MagicLinkWrapperProps) => {\n  const { toggleNotification } = useNotification();\n  const { formatMessage } = useIntl();\n  const { copy } = useClipboard();\n\n  const copyLabel = formatMessage({\n    id: 'app.component.CopyToClipboard.label',\n    defaultMessage: 'Copy to clipboard',\n  });\n\n  const handleClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const didCopy = await copy(target);\n\n    if (didCopy) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({ id: 'notification.link-copied' }),\n      });\n    }\n  };\n\n  return (\n    <ContentBox\n      endAction={\n        <IconButton label={copyLabel} variant=\"ghost\" onClick={handleClick}>\n          <Duplicate />\n        </IconButton>\n      }\n      title={target}\n      titleEllipsis\n      subtitle={children}\n      icon={<span style={{ fontSize: 32 }}>✉️</span>}\n      iconBackground=\"neutral100\"\n    />\n  );\n};\n\nexport { MagicLinkWrapper };\nexport type { MagicLinkWrapperProps };\n", "import { useIntl } from 'react-intl';\n\nimport { getBasename } from '../../../../../core/utils/basename';\n\nimport { MagicLinkWrapper } from './MagicLinkWrapper';\n\ninterface MagicLinkCEProps {\n  registrationToken: string;\n}\n\nconst MagicLinkCE = ({ registrationToken }: MagicLinkCEProps) => {\n  const { formatMessage } = useIntl();\n  const target = `${\n    window.location.origin\n  }${getBasename()}/auth/register?registrationToken=${registrationToken}`;\n\n  return (\n    <MagicLinkWrapper target={target}>\n      {formatMessage({\n        id: 'app.components.Users.MagicLink.connect',\n        defaultMessage: 'Copy and share this link to give access to this user',\n      })}\n    </MagicLinkWrapper>\n  );\n};\n\nexport { MagicLinkCE };\nexport type { MagicLinkCEProps };\n", "import { Field, MultiSelect, MultiSelectOption } from '@strapi/design-system';\nimport { Loader as LoadingIcon } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled, keyframes } from 'styled-components';\n\nimport { useField } from '../../../../../components/Form';\nimport { useAdminRoles } from '../../../../../hooks/useAdminRoles';\n\ninterface SelectRolesProps {\n  disabled?: boolean;\n}\n\nconst SelectRoles = ({ disabled }: SelectRolesProps) => {\n  const { isLoading, roles } = useAdminRoles();\n\n  const { formatMessage } = useIntl();\n  const { value = [], onChange, error } = useField<string[]>('roles');\n\n  return (\n    <Field.Root\n      error={error}\n      hint={formatMessage({\n        id: 'app.components.Users.ModalCreateBody.block-title.roles.description',\n        defaultMessage: 'A user can have one or several roles',\n      })}\n      name=\"roles\"\n      required\n    >\n      <Field.Label>\n        {formatMessage({\n          id: 'app.components.Users.ModalCreateBody.block-title.roles',\n          defaultMessage: \"User's roles\",\n        })}\n      </Field.Label>\n      <MultiSelect\n        disabled={disabled}\n        onChange={(v) => {\n          onChange('roles', v);\n        }}\n        placeholder={formatMessage({\n          id: 'app.components.Select.placeholder',\n          defaultMessage: 'Select',\n        })}\n        startIcon={isLoading ? <Loader /> : undefined}\n        value={value.map((v) => v.toString())}\n        withTags\n      >\n        {roles.map((role) => {\n          return (\n            <MultiSelectOption key={role.id} value={role.id.toString()}>\n              {formatMessage({\n                id: `global.${role.code}`,\n                defaultMessage: role.name,\n              })}\n            </MultiSelectOption>\n          );\n        })}\n      </MultiSelect>\n      <Field.Error />\n      <Field.Hint />\n    </Field.Root>\n  );\n};\n\nconst rotation = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n`;\n\nconst LoadingWrapper = styled.div`\n  animation: ${rotation} 2s infinite linear;\n`;\n\nconst Loader = () => (\n  <LoadingWrapper>\n    <LoadingIcon />\n  </LoadingWrapper>\n);\n\nexport { SelectRoles };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAM,mBAAmB,CAAC,EAAE,UAAU,OAAA,MAAoC;AAClE,QAAA,EAAE,mBAAmB,IAAI,gBAAgB;AACzC,QAAA,EAAE,cAAc,IAAI,QAAQ;AAC5B,QAAA,EAAE,KAAK,IAAI,aAAa;AAE9B,QAAM,YAAY,cAAc;IAC9B,IAAI;IACJ,gBAAgB;EAAA,CACjB;AAEK,QAAA,cAAc,OAAO,MAA2C;AACpE,MAAE,eAAe;AAEX,UAAA,UAAU,MAAM,KAAK,MAAM;AAEjC,QAAI,SAAS;AACQ,yBAAA;QACjB,MAAM;QACN,SAAS,cAAc,EAAE,IAAI,2BAAA,CAA4B;MAAA,CAC1D;IAAA;EACH;AAIA,aAAA;IAAC;IAAA;MACC,eACG,wBAAA,YAAA,EAAW,OAAO,WAAW,SAAQ,SAAQ,SAAS,aACrD,cAAC,wBAAA,eAAA,CAAA,CAAU,EACb,CAAA;MAEF,OAAO;MACP,eAAa;MACb,UAAU;MACV,UAAA,wBAAO,QAAK,EAAA,OAAO,EAAE,UAAU,GAAA,GAAM,UAAE,KAAA,CAAA;MACvC,gBAAe;IAAA;EAAA;AAGrB;ACxCA,IAAM,cAAc,CAAC,EAAE,kBAAA,MAA0C;AACzD,QAAA,EAAE,cAAc,IAAI,QAAQ;AAC5B,QAAA,SAAS,GACb,OAAO,SAAS,MAClB,GAAG,YAAA,CAAa,oCAAoC,iBAAiB;AAGnE,aAAA,wBAAC,kBAAiB,EAAA,QACf,UAAc,cAAA;IACb,IAAI;IACJ,gBAAgB;EAAA,CACjB,EACH,CAAA;AAEJ;ACZA,IAAM,cAAc,CAAC,EAAE,SAAA,MAAiC;AACtD,QAAM,EAAE,WAAW,MAAM,IAAI,cAAc;AAErC,QAAA,EAAE,cAAc,IAAI,QAAQ;AAC5B,QAAA,EAAE,QAAQ,CAAA,GAAI,UAAU,MAAM,IAAI,SAAmB,OAAO;AAGhE,aAAA;IAAC,MAAM;IAAN;MACC;MACA,MAAM,cAAc;QAClB,IAAI;QACJ,gBAAgB;MAAA,CACjB;MACD,MAAK;MACL,UAAQ;MAER,UAAA;YAAC,wBAAA,MAAM,OAAN,EACE,UAAc,cAAA;UACb,IAAI;UACJ,gBAAgB;QAAA,CACjB,EACH,CAAA;YACA;UAAC;UAAA;YACC;YACA,UAAU,CAAC,MAAM;AACf,uBAAS,SAAS,CAAC;YAAA;YAErB,aAAa,cAAc;cACzB,IAAI;cACJ,gBAAgB;YAAA,CACjB;YACD,WAAW,gBAAa,wBAAA,QAAA,CAAA,CAAO,IAAK;YACpC,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,SAAA,CAAU;YACpC,UAAQ;YAEP,UAAA,MAAM,IAAI,CAAC,SAAS;AACnB,yBAAA,wBACG,mBAAgC,EAAA,OAAO,KAAK,GAAG,SAAA,GAC7C,UAAc,cAAA;gBACb,IAAI,UAAU,KAAK,IAAI;gBACvB,gBAAgB,KAAK;cAAA,CACtB,EAJqB,GAAA,KAAK,EAK7B;YAAA,CAEH;UAAA;QAAA;YAEH,wBAAC,MAAM,OAAN,CAAA,CAAY;YACb,wBAAC,MAAM,MAAN,CAAA,CAAW;MAAA;IAAA;EAAA;AAGlB;AAEA,IAAM,WAAW;;;;;;;;AASjB,IAAM,iBAAiB,GAAO;eACf,QAAQ;;AAGvB,IAAM,SAAS,UACb,wBAAC,gBACC,EAAA,cAAA,wBAACA,eAAAA,CAAAA,CAAY,EACf,CAAA;",
  "names": ["LoadingIcon"]
}
