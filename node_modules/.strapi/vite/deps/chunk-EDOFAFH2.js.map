{
  "version": 3,
  "sources": ["../../../@strapi/email/admin/src/constants.ts", "../../../@strapi/email/admin/src/utils/prefixPluginTranslations.ts", "../../../@strapi/email/admin/src/index.ts"],
  "sourcesContent": ["export const PERMISSIONS = {\n  // This permission regards the main component (App) and is used to tell\n  // If the plugin link should be displayed in the menu\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\n  // plugin directly in the browser\n  settings: [{ action: 'plugin::email.settings.read', subject: null }],\n};\n", "type TradOptions = Record<string, string>;\n\nconst prefixPluginTranslations = (trad: TradOptions, pluginId: string): TradOptions => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n    return acc;\n  }, {} as TradOptions);\n};\n\nexport { prefixPluginTranslations };\n", "import { PERMISSIONS } from './constants';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nimport type { Plugin } from '@strapi/types';\n\nconst admin: Plugin.Config.AdminInput = {\n  // TODO typing app in strapi/types as every plugin needs it\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register(app: any) {\n    // Create the email settings section\n    app.createSettingSection(\n      {\n        id: 'email',\n        intlLabel: { id: 'email.SettingsNav.section-label', defaultMessage: 'Email Plugin' },\n      },\n      [\n        {\n          intlLabel: {\n            id: 'email.Settings.email.plugin.title',\n            defaultMessage: 'Settings',\n          },\n          id: 'settings',\n          to: 'email',\n          Component: () =>\n            import('./pages/Settings').then((mod) => ({\n              default: mod.ProtectedSettingsPage,\n            })),\n          permissions: PERMISSIONS.settings,\n        },\n      ]\n    );\n    app.registerPlugin({\n      id: 'email',\n      name: 'email',\n    });\n  },\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  bootstrap() {},\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, 'email'),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default admin;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAO,IAAM,cAAc;;;;;EAKzB,UAAU,CAAC,EAAE,QAAQ,+BAA+B,SAAS,KAAM,CAAA;AACrE;ACJA,IAAM,2BAA2B,CAAC,MAAmB,aAAkC;AAIrF,SAAO,OAAO,KAAK,IAAI,EAAE,OAAO,CAAC,KAAK,YAAY;AAChD,QAAI,GAAG,QAAQ,IAAI,OAAO,EAAE,IAAI,KAAK,OAAO;AACrC,WAAA;EACT,GAAG,CAAA,CAAiB;AACtB;ACLA,IAAM,QAAkC;;;EAGtC,SAAS,KAAU;AAEb,QAAA;MACF;QACE,IAAI;QACJ,WAAW,EAAE,IAAI,mCAAmC,gBAAgB,eAAe;MACrF;MACA;QACE;UACE,WAAW;YACT,IAAI;YACJ,gBAAgB;UAClB;UACA,IAAI;UACJ,IAAI;UACJ,WAAW,MACT,OAAO,iCAAkB,EAAE,KAAK,CAAC,SAAS;YACxC,SAAS,IAAI;UAAA,EACb;UACJ,aAAa,YAAY;QAAA;MAC3B;IAEJ;AACA,QAAI,eAAe;MACjB,IAAI;MACJ,MAAM;IAAA,CACP;EACH;;EAEA,YAAY;EAAC;EACb,MAAM,cAAc,EAAE,QAAA,GAAkC;AAChD,UAAA,gBAAgB,MAAM,QAAQ;MAClC,QAAQ,IAAI,CAAC,WAAW;AACf,eAAA,qCAA+B,OAAA,OAAA,EAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,6BAAA,MAAA,OAAA,8BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,GAAA,+BAAA,MAAA,OAAA,gCAAA,GAAA,0BAAA,MAAA,OAAA,2BAAA,EAAA,CAAA,GAAA,kBAAA,MAAA,SAAA,CAAA,EACnC,KAAK,CAAC,EAAE,SAAS,KAAA,MAAW;AACpB,iBAAA;YACL,MAAM,yBAAyB,MAAM,OAAO;YAC5C;UACF;QAAA,CACD,EACA,MAAM,MAAM;AACJ,iBAAA;YACL,MAAM,CAAC;YACP;UACF;QAAA,CACD;MACJ,CAAA;IACH;AAEO,WAAA,QAAQ,QAAQ,aAAa;EAAA;AAExC;",
  "names": []
}
