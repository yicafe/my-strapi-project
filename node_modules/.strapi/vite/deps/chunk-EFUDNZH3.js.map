{
  "version": 3,
  "sources": ["../../../@strapi/plugin-users-permissions/admin/src/constants.js", "../../../@strapi/plugin-users-permissions/admin/src/pluginId.js", "../../../@strapi/plugin-users-permissions/admin/src/utils/getTrad.js", "../../../@strapi/plugin-users-permissions/admin/src/utils/prefixPluginTranslations.js", "../../../@strapi/plugin-users-permissions/admin/src/index.js"],
  "sourcesContent": ["export const PERMISSIONS = {\n  // Roles\n  accessRoles: [\n    { action: 'plugin::users-permissions.roles.create', subject: null },\n    { action: 'plugin::users-permissions.roles.read', subject: null },\n  ],\n  createRole: [{ action: 'plugin::users-permissions.roles.create', subject: null }],\n  deleteRole: [{ action: 'plugin::users-permissions.roles.delete', subject: null }],\n  readRoles: [{ action: 'plugin::users-permissions.roles.read', subject: null }],\n  updateRole: [{ action: 'plugin::users-permissions.roles.update', subject: null }],\n\n  // AdvancedSettings\n  readAdvancedSettings: [\n    { action: 'plugin::users-permissions.advanced-settings.read', subject: null },\n  ],\n  updateAdvancedSettings: [\n    { action: 'plugin::users-permissions.advanced-settings.update', subject: null },\n  ],\n\n  // Emails\n  readEmailTemplates: [{ action: 'plugin::users-permissions.email-templates.read', subject: null }],\n  updateEmailTemplates: [\n    { action: 'plugin::users-permissions.email-templates.update', subject: null },\n  ],\n\n  // Providers\n  readProviders: [{ action: 'plugin::users-permissions.providers.read', subject: null }],\n  updateProviders: [{ action: 'plugin::users-permissions.providers.update', subject: null }],\n};\n", "import pluginPkg from '../../package.json';\n\nconst pluginId = pluginPkg.name.replace(/^@strapi\\/plugin-/i, '');\n\nexport default pluginId;\n", "import pluginId from '../pluginId';\n\nconst getTrad = (id) => `${pluginId}.${id}`;\n\nexport default getTrad;\n", "const prefixPluginTranslations = (trad, pluginId) => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n\n    return acc;\n  }, {});\n};\n\nexport { prefixPluginTranslations };\n", "import pluginPkg from '../../package.json';\n\nimport { PERMISSIONS } from './constants';\nimport getTrad from './utils/getTrad';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nconst name = pluginPkg.strapi.name;\n\nexport default {\n  register(app) {\n    // Create the plugin's settings section\n    app.createSettingSection(\n      {\n        id: 'users-permissions',\n        intlLabel: {\n          id: getTrad('Settings.section-label'),\n          defaultMessage: 'Users & Permissions plugin',\n        },\n      },\n      [\n        {\n          intlLabel: {\n            id: 'global.roles',\n            defaultMessage: 'Roles',\n          },\n          id: 'roles',\n          to: `users-permissions/roles`,\n          Component: () => import('./pages/Roles'),\n          permissions: PERMISSIONS.accessRoles,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.providers'),\n            defaultMessage: 'Providers',\n          },\n          id: 'providers',\n          to: `users-permissions/providers`,\n          Component: () => import('./pages/Providers'),\n          permissions: PERMISSIONS.readProviders,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.emailTemplates'),\n            defaultMessage: 'Email templates',\n          },\n          id: 'email-templates',\n          to: `users-permissions/email-templates`,\n          Component: () =>\n            import('./pages/EmailTemplates').then((mod) => ({\n              default: mod.ProtectedEmailTemplatesPage,\n            })),\n          permissions: PERMISSIONS.readEmailTemplates,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.advancedSettings'),\n            defaultMessage: 'Advanced Settings',\n          },\n          id: 'advanced-settings',\n          to: `users-permissions/advanced-settings`,\n          Component: () =>\n            import('./pages/AdvancedSettings').then((mod) => ({\n              default: mod.ProtectedAdvancedSettingsPage,\n            })),\n          permissions: PERMISSIONS.readAdvancedSettings,\n        },\n      ]\n    );\n\n    app.registerPlugin({\n      id: 'users-permissions',\n      name,\n    });\n  },\n  bootstrap() {},\n  async registerTrads({ locales }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, 'users-permissions'),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],
  "mappings": "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",
  "names": ["pluginId"]
}
