{
  "version": 3,
  "sources": ["../../../@strapi/admin/admin/src/services/webhooks.ts", "../../../@strapi/admin/admin/src/pages/Settings/pages/Webhooks/hooks/useWebhooks.ts"],
  "sourcesContent": ["import * as Webhooks from '../../../shared/contracts/webhooks';\n\nimport { adminApi } from './api';\n\nconst webhooksSerivce = adminApi\n  .enhanceEndpoints({\n    addTagTypes: ['Webhook'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getWebhooks: builder.query<\n        Webhooks.GetWebhooks.Response['data'],\n        Webhooks.GetWebhook.Params | void\n      >({\n        query: (args) => ({\n          url: `/admin/webhooks/${args?.id ?? ''}`,\n          method: 'GET',\n        }),\n        transformResponse: (\n          response: Webhooks.GetWebhooks.Response | Webhooks.GetWebhook.Response\n        ) => {\n          if (Array.isArray(response.data)) {\n            return response.data;\n          } else {\n            return [response.data];\n          }\n        },\n        providesTags: (res, _err, arg) => {\n          if (typeof arg === 'object' && 'id' in arg) {\n            return [{ type: 'Webhook' as const, id: arg.id }];\n          } else {\n            return [\n              ...(res?.map(({ id }) => ({ type: 'Webhook' as const, id })) ?? []),\n              { type: 'Webhook' as const, id: 'LIST' },\n            ];\n          }\n        },\n      }),\n      createWebhook: builder.mutation<\n        Webhooks.CreateWebhook.Response['data'],\n        Omit<Webhooks.CreateWebhook.Request['body'], 'id' | 'isEnabled'>\n      >({\n        query: (body) => ({\n          url: `/admin/webhooks`,\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.CreateWebhook.Response) => response.data,\n        invalidatesTags: [{ type: 'Webhook', id: 'LIST' }],\n      }),\n      updateWebhook: builder.mutation<\n        Webhooks.UpdateWebhook.Response['data'],\n        Webhooks.UpdateWebhook.Request['body'] & Webhooks.UpdateWebhook.Params\n      >({\n        query: ({ id, ...body }) => ({\n          url: `/admin/webhooks/${id}`,\n          method: 'PUT',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.UpdateWebhook.Response) => response.data,\n        invalidatesTags: (_res, _err, { id }) => [{ type: 'Webhook', id }],\n      }),\n      triggerWebhook: builder.mutation<\n        Webhooks.TriggerWebhook.Response['data'],\n        Webhooks.TriggerWebhook.Params['id']\n      >({\n        query: (webhookId) => ({\n          url: `/admin/webhooks/${webhookId}/trigger`,\n          method: 'POST',\n        }),\n        transformResponse: (response: Webhooks.TriggerWebhook.Response) => response.data,\n      }),\n      deleteManyWebhooks: builder.mutation<\n        Webhooks.DeleteWebhooks.Response['data'],\n        Webhooks.DeleteWebhooks.Request['body']\n      >({\n        query: (body) => ({\n          url: `/admin/webhooks/batch-delete`,\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.DeleteWebhooks.Response) => response.data,\n        invalidatesTags: (_res, _err, { ids }) => ids.map((id) => ({ type: 'Webhook', id })),\n      }),\n    }),\n    overrideExisting: false,\n  });\n\nconst {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n} = webhooksSerivce;\n\nexport {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n};\n", "import { SerializedError } from '@reduxjs/toolkit';\n\nimport { GetWebhook, GetWebhooks } from '../../../../../../../shared/contracts/webhooks';\nimport {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n} from '../../../../../services/webhooks';\nimport { BaseQueryError } from '../../../../../utils/baseQuery';\n\nconst useWebhooks = (\n  args: GetWebhook.Params | void = undefined,\n  queryArgs?: Parameters<typeof useGetWebhooksQuery>[1]\n) => {\n  const { data: webhooks, isLoading, error } = useGetWebhooksQuery(args, queryArgs);\n  const [createWebhook, { error: createError }] = useCreateWebhookMutation();\n  const [updateWebhook, { error: updateError }] = useUpdateWebhookMutation();\n\n  const [triggerWebhook] = useTriggerWebhookMutation();\n  const [deleteManyWebhooks] = useDeleteManyWebhooksMutation();\n\n  return {\n    webhooks: webhooks as GetWebhooks.Response['data'] | undefined,\n    isLoading: isLoading as boolean,\n    error: (error || createError || updateError) as BaseQueryError | SerializedError,\n    createWebhook,\n    updateWebhook,\n    triggerWebhook,\n    deleteManyWebhooks,\n  };\n};\n\nexport { useWebhooks };\n"],
  "mappings": ";;;;;AAIA,IAAM,kBAAkB,SACrB,iBAAiB;EAChB,aAAa,CAAC,SAAS;AACzB,CAAC,EACA,gBAAgB;EACf,WAAW,CAAC,aAAa;IACvB,aAAa,QAAQ,MAGnB;MACA,OAAO,CAAC,UAAU;QAChB,KAAK,oBAAmB,6BAAM,OAAM,EAAE;QACtC,QAAQ;MAAA;MAEV,mBAAmB,CACjB,aACG;AACH,YAAI,MAAM,QAAQ,SAAS,IAAI,GAAG;AAChC,iBAAO,SAAS;QAAA,OACX;AACE,iBAAA,CAAC,SAAS,IAAI;QAAA;MACvB;MAEF,cAAc,CAAC,KAAK,MAAM,QAAQ;AAChC,YAAI,OAAO,QAAQ,YAAY,QAAQ,KAAK;AAC1C,iBAAO,CAAC,EAAE,MAAM,WAAoB,IAAI,IAAI,GAAA,CAAI;QAAA,OAC3C;AACE,iBAAA;YACL,IAAI,2BAAK,IAAI,CAAC,EAAE,GAAA,OAAU,EAAE,MAAM,WAAoB,GAAG,QAAO,CAAA;YAChE,EAAE,MAAM,WAAoB,IAAI,OAAO;UAAA;QACzC;MACF;IACF,CACD;IACD,eAAe,QAAQ,SAGrB;MACA,OAAO,CAAC,UAAU;QAChB,KAAK;QACL,QAAQ;QACR,MAAM;MAAA;MAER,mBAAmB,CAAC,aAA8C,SAAS;MAC3E,iBAAiB,CAAC,EAAE,MAAM,WAAW,IAAI,OAAA,CAAQ;IAAA,CAClD;IACD,eAAe,QAAQ,SAGrB;MACA,OAAO,CAAC,EAAE,IAAI,GAAG,KAAA,OAAY;QAC3B,KAAK,mBAAmB,EAAE;QAC1B,QAAQ;QACR,MAAM;MAAA;MAER,mBAAmB,CAAC,aAA8C,SAAS;MAC3E,iBAAiB,CAAC,MAAM,MAAM,EAAE,GAAA,MAAS,CAAC,EAAE,MAAM,WAAW,GAAA,CAAI;IAAA,CAClE;IACD,gBAAgB,QAAQ,SAGtB;MACA,OAAO,CAAC,eAAe;QACrB,KAAK,mBAAmB,SAAS;QACjC,QAAQ;MAAA;MAEV,mBAAmB,CAAC,aAA+C,SAAS;IAAA,CAC7E;IACD,oBAAoB,QAAQ,SAG1B;MACA,OAAO,CAAC,UAAU;QAChB,KAAK;QACL,QAAQ;QACR,MAAM;MAAA;MAER,mBAAmB,CAAC,aAA+C,SAAS;MAC5E,iBAAiB,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE,MAAM,WAAW,GAAA,EAAK;IAAA,CACpF;EAAA;EAEH,kBAAkB;AACpB,CAAC;AAEH,IAAM;EACJ;EACA;EACA;EACA;EACA;AACF,IAAI;AClFJ,IAAM,cAAc,CAClB,OAAiC,QACjC,cACG;AACG,QAAA,EAAE,MAAM,UAAU,WAAW,MAAA,IAAU,oBAAoB,MAAM,SAAS;AAChF,QAAM,CAAC,eAAe,EAAE,OAAO,YAAY,CAAC,IAAI,yBAAyB;AACzE,QAAM,CAAC,eAAe,EAAE,OAAO,YAAY,CAAC,IAAI,yBAAyB;AAEnE,QAAA,CAAC,cAAc,IAAI,0BAA0B;AAC7C,QAAA,CAAC,kBAAkB,IAAI,8BAA8B;AAEpD,SAAA;IACL;IACA;IACA,OAAQ,SAAS,eAAe;IAChC;IACA;IACA;IACA;EAAA;AAEJ;",
  "names": []
}
