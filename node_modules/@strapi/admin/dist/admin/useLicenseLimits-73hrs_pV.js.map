{"version":3,"file":"useLicenseLimits-73hrs_pV.js","sources":["../../ee/admin/src/hooks/useLicenseLimits.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useGetLicenseLimitsQuery } from '../../../../admin/src/services/admin';\nimport { GetLicenseLimitInformation } from '../../../../shared/contracts/admin';\n\ninterface UseLicenseLimitsArgs {\n  enabled?: boolean;\n}\n\nfunction useLicenseLimits({ enabled }: UseLicenseLimitsArgs = { enabled: true }) {\n  const { data, isError, isLoading } = useGetLicenseLimitsQuery(undefined, {\n    skip: !enabled,\n  });\n\n  type FeatureNames = GetLicenseLimitInformation.Response['data']['features'][number]['name'];\n\n  type GetFeatureType = <T>(name: FeatureNames) => Record<string, T> | undefined;\n\n  const getFeature = React.useCallback<GetFeatureType>(\n    (name) => {\n      const feature = data?.data?.features.find((feature) => feature.name === name);\n\n      if (feature && 'options' in feature) {\n        return feature.options;\n      } else {\n        return {};\n      }\n    },\n    [data]\n  );\n\n  return { license: data?.data, getFeature, isError, isLoading };\n}\n\nexport { useLicenseLimits };\nexport type { UseLicenseLimitsArgs };\n"],"names":["useGetLicenseLimitsQuery","React","feature"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AASA,SAAS,iBAAiB,EAAE,OAAA,KAAkC,EAAE,OAAA,EAAS,MAAQ,EAAA;AAC/E,EAAA,MAAM,EAAE,IAAM,EAAA,OAAA,EAAS,SAAU,EAAA,GAAIA,+BAAyB,KAAW,CAAA,EAAA;AAAA,IACvE,MAAM,CAAC;AAAA,GACR,CAAA;AAMD,EAAA,MAAM,aAAaC,gBAAM,CAAA,WAAA;AAAA,IACvB,CAAC,IAAS,KAAA;AACR,MAAM,MAAA,OAAA,GAAU,MAAM,IAAM,EAAA,QAAA,CAAS,KAAK,CAACC,QAAAA,KAAYA,QAAQ,CAAA,IAAA,KAAS,IAAI,CAAA;AAE5E,MAAI,IAAA,OAAA,IAAW,aAAa,OAAS,EAAA;AACnC,QAAA,OAAO,OAAQ,CAAA,OAAA;AAAA,OACV,MAAA;AACL,QAAA,OAAO,EAAC;AAAA;AACV,KACF;AAAA,IACA,CAAC,IAAI;AAAA,GACP;AAEA,EAAA,OAAO,EAAE,OAAS,EAAA,IAAA,EAAM,IAAM,EAAA,UAAA,EAAY,SAAS,SAAU,EAAA;AAC/D;;;;"}