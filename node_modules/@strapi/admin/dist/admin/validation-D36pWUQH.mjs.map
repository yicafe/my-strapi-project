{"version":3,"file":"validation-D36pWUQH.mjs","sources":["../../admin/src/pages/Settings/pages/Users/utils/validation.ts"],"sourcesContent":["import * as yup from 'yup';\n\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\n\n/**\n * @description This needs wrapping in `yup.object().shape()` before use.\n */\nconst COMMON_USER_SCHEMA = {\n  firstname: yup.string().trim().required({\n    id: translatedErrors.required.id,\n    defaultMessage: 'This field is required',\n  }),\n  lastname: yup.string(),\n  email: yup.string().email(translatedErrors.email).lowercase().required({\n    id: translatedErrors.required.id,\n    defaultMessage: 'This field is required',\n  }),\n  username: yup\n    .string()\n    .transform((value) => (value === '' ? undefined : value))\n    .nullable(),\n  password: yup\n    .string()\n    .transform((value) => (value === '' || value === null ? undefined : value))\n    .nullable()\n    .min(8, {\n      ...translatedErrors.minLength,\n      values: { min: 8 },\n    })\n    .matches(/[a-z]/, {\n      id: 'components.Input.error.contain.lowercase',\n      defaultMessage: 'Password must contain at least one lowercase character',\n    })\n    .matches(/[A-Z]/, {\n      id: 'components.Input.error.contain.uppercase',\n      defaultMessage: 'Password must contain at least one uppercase character',\n    })\n    .matches(/\\d/, {\n      id: 'components.Input.error.contain.number',\n      defaultMessage: 'Password must contain at least one number',\n    }),\n  confirmPassword: yup\n    .string()\n    .transform((value) => (value === '' ? null : value))\n    .nullable()\n    .min(8, {\n      ...translatedErrors.minLength,\n      values: { min: 8 },\n    })\n    .oneOf([yup.ref('password'), null], {\n      id: 'components.Input.error.password.noMatch',\n      defaultMessage: 'Passwords must match',\n    })\n    .when('password', (password, passSchema) => {\n      return password\n        ? passSchema\n            .required({\n              id: translatedErrors.required.id,\n              defaultMessage: 'This field is required',\n            })\n            .nullable()\n        : passSchema;\n    }),\n};\n\nexport { COMMON_USER_SCHEMA };\n"],"names":["translatedErrors"],"mappings":";;;AAOA,MAAM,kBAAqB,GAAA;AAAA,EACzB,WAAW,GAAI,CAAA,MAAA,EAAS,CAAA,IAAA,GAAO,QAAS,CAAA;AAAA,IACtC,EAAA,EAAIA,YAAiB,QAAS,CAAA,EAAA;AAAA,IAC9B,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACD,QAAA,EAAU,IAAI,MAAO,EAAA;AAAA,EACrB,KAAA,EAAO,GAAI,CAAA,MAAA,EAAS,CAAA,KAAA,CAAMA,YAAiB,KAAK,CAAA,CAAE,SAAU,EAAA,CAAE,QAAS,CAAA;AAAA,IACrE,EAAA,EAAIA,YAAiB,QAAS,CAAA,EAAA;AAAA,IAC9B,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACD,QAAU,EAAA,GAAA,CACP,MAAO,EAAA,CACP,SAAU,CAAA,CAAC,KAAW,KAAA,KAAA,KAAU,EAAK,GAAA,KAAA,CAAA,GAAY,KAAM,CAAA,CACvD,QAAS,EAAA;AAAA,EACZ,UAAU,GACP,CAAA,MAAA,EACA,CAAA,SAAA,CAAU,CAAC,KAAW,KAAA,KAAA,KAAU,EAAM,IAAA,KAAA,KAAU,OAAO,KAAY,CAAA,GAAA,KAAM,EACzE,QAAS,EAAA,CACT,IAAI,CAAG,EAAA;AAAA,IACN,GAAGA,WAAiB,CAAA,SAAA;AAAA,IACpB,MAAA,EAAQ,EAAE,GAAA,EAAK,CAAE;AAAA,GAClB,CACA,CAAA,OAAA,CAAQ,OAAS,EAAA;AAAA,IAChB,EAAI,EAAA,0CAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,OAAA,CAAQ,OAAS,EAAA;AAAA,IAChB,EAAI,EAAA,0CAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,OAAA,CAAQ,IAAM,EAAA;AAAA,IACb,EAAI,EAAA,uCAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACH,eAAiB,EAAA,GAAA,CACd,MAAO,EAAA,CACP,UAAU,CAAC,KAAA,KAAW,KAAU,KAAA,EAAA,GAAK,OAAO,KAAM,CAAA,CAClD,QAAS,EAAA,CACT,IAAI,CAAG,EAAA;AAAA,IACN,GAAGA,WAAiB,CAAA,SAAA;AAAA,IACpB,MAAA,EAAQ,EAAE,GAAA,EAAK,CAAE;AAAA,GAClB,EACA,KAAM,CAAA,CAAC,IAAI,GAAI,CAAA,UAAU,CAAG,EAAA,IAAI,CAAG,EAAA;AAAA,IAClC,EAAI,EAAA,yCAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,IAAA,CAAK,UAAY,EAAA,CAAC,UAAU,UAAe,KAAA;AAC1C,IAAO,OAAA,QAAA,GACH,WACG,QAAS,CAAA;AAAA,MACR,EAAA,EAAIA,YAAiB,QAAS,CAAA,EAAA;AAAA,MAC9B,cAAgB,EAAA;AAAA,KACjB,CACA,CAAA,QAAA,EACH,GAAA,UAAA;AAAA,GACL;AACL;;;;"}