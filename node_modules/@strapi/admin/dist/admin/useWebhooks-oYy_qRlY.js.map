{"version":3,"file":"useWebhooks-oYy_qRlY.js","sources":["../../admin/src/services/webhooks.ts","../../admin/src/pages/Settings/pages/Webhooks/hooks/useWebhooks.ts"],"sourcesContent":["import * as Webhooks from '../../../shared/contracts/webhooks';\n\nimport { adminApi } from './api';\n\nconst webhooksSerivce = adminApi\n  .enhanceEndpoints({\n    addTagTypes: ['Webhook'],\n  })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      getWebhooks: builder.query<\n        Webhooks.GetWebhooks.Response['data'],\n        Webhooks.GetWebhook.Params | void\n      >({\n        query: (args) => ({\n          url: `/admin/webhooks/${args?.id ?? ''}`,\n          method: 'GET',\n        }),\n        transformResponse: (\n          response: Webhooks.GetWebhooks.Response | Webhooks.GetWebhook.Response\n        ) => {\n          if (Array.isArray(response.data)) {\n            return response.data;\n          } else {\n            return [response.data];\n          }\n        },\n        providesTags: (res, _err, arg) => {\n          if (typeof arg === 'object' && 'id' in arg) {\n            return [{ type: 'Webhook' as const, id: arg.id }];\n          } else {\n            return [\n              ...(res?.map(({ id }) => ({ type: 'Webhook' as const, id })) ?? []),\n              { type: 'Webhook' as const, id: 'LIST' },\n            ];\n          }\n        },\n      }),\n      createWebhook: builder.mutation<\n        Webhooks.CreateWebhook.Response['data'],\n        Omit<Webhooks.CreateWebhook.Request['body'], 'id' | 'isEnabled'>\n      >({\n        query: (body) => ({\n          url: `/admin/webhooks`,\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.CreateWebhook.Response) => response.data,\n        invalidatesTags: [{ type: 'Webhook', id: 'LIST' }],\n      }),\n      updateWebhook: builder.mutation<\n        Webhooks.UpdateWebhook.Response['data'],\n        Webhooks.UpdateWebhook.Request['body'] & Webhooks.UpdateWebhook.Params\n      >({\n        query: ({ id, ...body }) => ({\n          url: `/admin/webhooks/${id}`,\n          method: 'PUT',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.UpdateWebhook.Response) => response.data,\n        invalidatesTags: (_res, _err, { id }) => [{ type: 'Webhook', id }],\n      }),\n      triggerWebhook: builder.mutation<\n        Webhooks.TriggerWebhook.Response['data'],\n        Webhooks.TriggerWebhook.Params['id']\n      >({\n        query: (webhookId) => ({\n          url: `/admin/webhooks/${webhookId}/trigger`,\n          method: 'POST',\n        }),\n        transformResponse: (response: Webhooks.TriggerWebhook.Response) => response.data,\n      }),\n      deleteManyWebhooks: builder.mutation<\n        Webhooks.DeleteWebhooks.Response['data'],\n        Webhooks.DeleteWebhooks.Request['body']\n      >({\n        query: (body) => ({\n          url: `/admin/webhooks/batch-delete`,\n          method: 'POST',\n          data: body,\n        }),\n        transformResponse: (response: Webhooks.DeleteWebhooks.Response) => response.data,\n        invalidatesTags: (_res, _err, { ids }) => ids.map((id) => ({ type: 'Webhook', id })),\n      }),\n    }),\n    overrideExisting: false,\n  });\n\nconst {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n} = webhooksSerivce;\n\nexport {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n};\n","import { SerializedError } from '@reduxjs/toolkit';\n\nimport { GetWebhook, GetWebhooks } from '../../../../../../../shared/contracts/webhooks';\nimport {\n  useGetWebhooksQuery,\n  useCreateWebhookMutation,\n  useUpdateWebhookMutation,\n  useTriggerWebhookMutation,\n  useDeleteManyWebhooksMutation,\n} from '../../../../../services/webhooks';\nimport { BaseQueryError } from '../../../../../utils/baseQuery';\n\nconst useWebhooks = (\n  args: GetWebhook.Params | void = undefined,\n  queryArgs?: Parameters<typeof useGetWebhooksQuery>[1]\n) => {\n  const { data: webhooks, isLoading, error } = useGetWebhooksQuery(args, queryArgs);\n  const [createWebhook, { error: createError }] = useCreateWebhookMutation();\n  const [updateWebhook, { error: updateError }] = useUpdateWebhookMutation();\n\n  const [triggerWebhook] = useTriggerWebhookMutation();\n  const [deleteManyWebhooks] = useDeleteManyWebhooksMutation();\n\n  return {\n    webhooks: webhooks as GetWebhooks.Response['data'] | undefined,\n    isLoading: isLoading as boolean,\n    error: (error || createError || updateError) as BaseQueryError | SerializedError,\n    createWebhook,\n    updateWebhook,\n    triggerWebhook,\n    deleteManyWebhooks,\n  };\n};\n\nexport { useWebhooks };\n"],"names":["adminApi"],"mappings":"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"}